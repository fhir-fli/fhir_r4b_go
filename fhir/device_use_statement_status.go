// Code generated by FHIR Generator. DO NOT EDIT.
// A coded concept indicating the current status of the Device Usage.
package fhir_r4b_go
// DeviceUseStatementStatus represents the FHIR ValueSet as an enumeration
type DeviceUseStatementStatus struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	DeviceUseStatementStatus_Active = "active" // Active: The device is still being used.
	DeviceUseStatementStatus_Completed = "completed" // Completed: The device is no longer being used.
	DeviceUseStatementStatus_Entered_in_error = "entered-in-error" // Entered in Error: The statement was recorded incorrectly.
	DeviceUseStatementStatus_Intended = "intended" // Intended: The device may be used at some time in the future.
	DeviceUseStatementStatus_Stopped = "stopped" // Stopped: Actions implied by the statement have been permanently halted, before all of them occurred.
	DeviceUseStatementStatus_On_hold = "on-hold" // On Hold: Actions implied by the statement have been temporarily halted, but are expected to continue later. May also be called "suspended".
)

// Clone creates a deep copy of the enum
func (e DeviceUseStatementStatus) Clone() *DeviceUseStatementStatus {
	return &DeviceUseStatementStatus{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *DeviceUseStatementStatus) Equals(other *DeviceUseStatementStatus) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

