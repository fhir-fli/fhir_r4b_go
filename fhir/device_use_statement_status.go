// Code generated by FHIR Generator. DO NOT EDIT.
// A coded concept indicating the current status of the Device Usage.
package fhir_r4b_go

// DeviceUseStatementStatus represents the FHIR ValueSet as an enumeration
type DeviceUseStatementStatus int

const (
	// Active: The device is still being used.
	DeviceUseStatementStatus_Active DeviceUseStatementStatus = iota
	// Completed: The device is no longer being used.
	DeviceUseStatementStatus_Completed DeviceUseStatementStatus = iota
	// Entered in Error: The statement was recorded incorrectly.
	DeviceUseStatementStatus_Entered_in_error DeviceUseStatementStatus = iota
	// Intended: The device may be used at some time in the future.
	DeviceUseStatementStatus_Intended DeviceUseStatementStatus = iota
	// Stopped: Actions implied by the statement have been permanently halted, before all of them occurred.
	DeviceUseStatementStatus_Stopped DeviceUseStatementStatus = iota
	// On Hold: Actions implied by the statement have been temporarily halted, but are expected to continue later. May also be called "suspended".
	DeviceUseStatementStatus_On_hold DeviceUseStatementStatus = iota
)

// String converts the enum to its string representation
func (e DeviceUseStatementStatus) String() string {
	switch e {
	case DeviceUseStatementStatus_Active: return "Active"
	case DeviceUseStatementStatus_Completed: return "Completed"
	case DeviceUseStatementStatus_Entered_in_error: return "Entered in Error"
	case DeviceUseStatementStatus_Intended: return "Intended"
	case DeviceUseStatementStatus_Stopped: return "Stopped"
	case DeviceUseStatementStatus_On_hold: return "On Hold"
	default: return "Unknown"
	}
}

