// Code generated by FHIR Generator. DO NOT EDIT.
// Code for a known / defined timing pattern.
package fhir_r4b_go
// TimingAbbreviation represents the FHIR ValueSet as an enumeration
type TimingAbbreviation struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	TimingAbbreviation_BID = "BID" // BID: 
	TimingAbbreviation_TID = "TID" // TID: 
	TimingAbbreviation_QID = "QID" // QID: 
	TimingAbbreviation_AM = "AM" // AM: 
	TimingAbbreviation_PM = "PM" // PM: 
	TimingAbbreviation_QD = "QD" // QD: 
	TimingAbbreviation_QOD = "QOD" // QOD: 
	TimingAbbreviation_Q1H = "Q1H" // every hour: 
	TimingAbbreviation_Q2H = "Q2H" // every 2 hours: 
	TimingAbbreviation_Q3H = "Q3H" // every 3 hours: 
	TimingAbbreviation_Q4H = "Q4H" // Q4H: 
	TimingAbbreviation_Q6H = "Q6H" // Q6H: 
	TimingAbbreviation_Q8H = "Q8H" // every 8 hours: 
	TimingAbbreviation_BED = "BED" // at bedtime: 
	TimingAbbreviation_WK = "WK" // weekly: 
	TimingAbbreviation_MO = "MO" // monthly: 
)

// Clone creates a deep copy of the enum
func (e TimingAbbreviation) Clone() *TimingAbbreviation {
	return &TimingAbbreviation{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *TimingAbbreviation) Equals(other *TimingAbbreviation) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

