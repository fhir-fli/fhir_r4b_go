// Code generated by FHIR Generator. DO NOT EDIT.
// How the system supports versioning for a resource.
package fhir_r4b_go
// ResourceVersionPolicy represents the FHIR ValueSet as an enumeration
type ResourceVersionPolicy struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ResourceVersionPolicy_No_version = "no-version" // No VersionId Support: VersionId meta-property is not supported (server) or used (client).
	ResourceVersionPolicy_Versioned = "versioned" // Versioned: VersionId meta-property is supported (server) or used (client).
	ResourceVersionPolicy_Versioned_update = "versioned-update" // VersionId tracked fully: VersionId must be correct for updates (server) or will be specified (If-match header) for updates (client).
)

// Clone creates a deep copy of the enum
func (e ResourceVersionPolicy) Clone() *ResourceVersionPolicy {
	return &ResourceVersionPolicy{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ResourceVersionPolicy) Equals(other *ResourceVersionPolicy) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

