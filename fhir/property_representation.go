// Code generated by FHIR Generator. DO NOT EDIT.
// How a property is represented when serialized.
package fhir_r4b_go
// PropertyRepresentation represents the FHIR ValueSet as an enumeration
type PropertyRepresentation struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	PropertyRepresentation_XmlAttr = "xmlAttr" // XML Attribute: In XML, this property is represented as an attribute not an element.
	PropertyRepresentation_XmlText = "xmlText" // XML Text: This element is represented using the XML text attribute (primitives only).
	PropertyRepresentation_TypeAttr = "typeAttr" // Type Attribute: The type of this element is indicated using xsi:type.
	PropertyRepresentation_CdaText = "cdaText" // CDA Text Format: Use CDA narrative instead of XHTML.
	PropertyRepresentation_Xhtml = "xhtml" // XHTML: The property is represented using XHTML.
)

// Clone creates a deep copy of the enum
func (e PropertyRepresentation) Clone() *PropertyRepresentation {
	return &PropertyRepresentation{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *PropertyRepresentation) Equals(other *PropertyRepresentation) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

