// Code generated by FHIR Generator. DO NOT EDIT.
// FHIR search modifiers allowed for use in Subscriptions and SubscriptionTopics.
package fhir_r4b_go
// SubscriptionSearchModifier represents the FHIR ValueSet as an enumeration
type SubscriptionSearchModifier struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	SubscriptionSearchModifier_Equals = "=" // =: Used to match a value according to FHIR Search rules (e.g., Patient/123, Encounter/2002).
	SubscriptionSearchModifier_Eq = "eq" // Equal: The value for the parameter in the resource is equal to the provided value.
	SubscriptionSearchModifier_Ne = "ne" // Not Equal: The value for the parameter in the resource is not equal to the provided value.
	SubscriptionSearchModifier_Gt = "gt" // Greater Than: The value for the parameter in the resource is greater than the provided value.
	SubscriptionSearchModifier_Lt = "lt" // Less Than: The value for the parameter in the resource is less than the provided value.
	SubscriptionSearchModifier_Ge = "ge" // Greater Than or Equal: The value for the parameter in the resource is greater or equal to the provided value.
	SubscriptionSearchModifier_Le = "le" // Less Than or Equal: The value for the parameter in the resource is less or equal to the provided value.
	SubscriptionSearchModifier_Sa = "sa" // Starts After: The value for the parameter in the resource starts after the provided value.
	SubscriptionSearchModifier_Eb = "eb" // Ends Before: The value for the parameter in the resource ends before the provided value.
	SubscriptionSearchModifier_Ap = "ap" // Approximately: The value for the parameter in the resource is approximately the same to the provided value. Note that the recommended value for the approximation is 10% of the stated value (or for a date, 10% of the gap between now and the date), but systems may choose other values where appropriate.
	SubscriptionSearchModifier_Above = "above" // Above: The search parameter is a concept with the form [system]|[code], and the search parameter tests whether the coding in a resource subsumes the specified search code.
	SubscriptionSearchModifier_Below = "below" // Below: The search parameter is a concept with the form [system]|[code], and the search parameter tests whether the coding in a resource is subsumed by the specified search code.
	SubscriptionSearchModifier_In = "in" // In: The search parameter is a member of a Group or List, or the search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the value is present in the specified Group, List, or Value Set.
	SubscriptionSearchModifier_Not_in = "not-in" // Not In: The search parameter is a member of a Group or List, or the search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the value is NOT present in the specified Group, List, or Value Set.
	SubscriptionSearchModifier_Of_type = "of-type" // Of Type: The search parameter has the format system|code|value, where the system and code refer to a Identifier.type.coding.system and .code, and match if any of the type codes match. All 3 parts must be present.
)

// Clone creates a deep copy of the enum
func (e SubscriptionSearchModifier) Clone() *SubscriptionSearchModifier {
	return &SubscriptionSearchModifier{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *SubscriptionSearchModifier) Equals(other *SubscriptionSearchModifier) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

