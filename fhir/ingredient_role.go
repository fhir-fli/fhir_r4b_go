// Code generated by FHIR Generator. DO NOT EDIT.
// A classification of the ingredient identifying its purpose within the product.
package fhir_r4b_go

// IngredientRole represents the FHIR ValueSet as an enumeration
type IngredientRole int

const (
	// Active: 
	IngredientRole_Value100000072072 IngredientRole = iota
	// Adjuvant: 
	IngredientRole_Value100000072073 IngredientRole = iota
	// Excipient: 
	IngredientRole_Value100000072082 IngredientRole = iota
	// Starting material for excipient: 
	IngredientRole_Value100000136065 IngredientRole = iota
	// Solvent / Diluent: 
	IngredientRole_Value100000136066 IngredientRole = iota
	// Raw materials used in the manufacture of the product: 
	IngredientRole_Value100000136178 IngredientRole = iota
	// Starting material for active substance: 
	IngredientRole_Value100000136179 IngredientRole = iota
	// Overage: 
	IngredientRole_Value100000136561 IngredientRole = iota
	// bioenhancer: 
	IngredientRole_Value200000003427 IngredientRole = iota
)

// String converts the enum to its string representation
func (e IngredientRole) String() string {
	switch e {
	case IngredientRole_Value100000072072: return "Active"
	case IngredientRole_Value100000072073: return "Adjuvant"
	case IngredientRole_Value100000072082: return "Excipient"
	case IngredientRole_Value100000136065: return "Starting material for excipient"
	case IngredientRole_Value100000136066: return "Solvent / Diluent"
	case IngredientRole_Value100000136178: return "Raw materials used in the manufacture of the product"
	case IngredientRole_Value100000136179: return "Starting material for active substance"
	case IngredientRole_Value100000136561: return "Overage"
	case IngredientRole_Value200000003427: return "bioenhancer"
	default: return "Unknown"
	}
}

