// Code generated by FHIR Generator. DO NOT EDIT.
// This example value set defines a set of codes that can be used to indicate the physical form of the Location.
package fhir_r4b_go
// LocationType represents the FHIR ValueSet as an enumeration
type LocationType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	LocationType_Si = "si" // Site: A collection of buildings or other locations such as a site or a campus.
	LocationType_Bu = "bu" // Building: Any Building or structure. This may contain rooms, corridors, wings, etc. It might not have walls, or a roof, but is considered a defined/allocated space.
	LocationType_Wi = "wi" // Wing: A Wing within a Building, this often contains levels, rooms and corridors.
	LocationType_Wa = "wa" // Ward: A Ward is a section of a medical facility that may contain rooms and other types of location.
	LocationType_Lvl = "lvl" // Level: A Level in a multi-level Building/Structure.
	LocationType_Co = "co" // Corridor: Any corridor within a Building, that may connect rooms.
	LocationType_Ro = "ro" // Room: A space that is allocated as a room, it may have walls/roof etc., but does not require these.
	LocationType_Bd = "bd" // Bed: A space that is allocated for sleeping/laying on. This is not the physical bed/trolley that may be moved about, but the space it may occupy.
	LocationType_Ve = "ve" // Vehicle: A means of transportation.
	LocationType_Ho = "ho" // House: A residential dwelling. Usually used to reference a location that a person/patient may reside.
	LocationType_Ca = "ca" // Cabinet: A container that can store goods, equipment, medications or other items.
	LocationType_Rd = "rd" // Road: A defined path to travel between 2 points that has a known name.
	LocationType_Area = "area" // Area: A defined physical boundary of something, such as a flood risk zone, region, postcode
	LocationType_Jdn = "jdn" // Jurisdiction: A wide scope that covers a conceptual domain, such as a Nation (Country wide community or Federal Government - e.g. Ministry of Health), Province or State (community or Government), Business (throughout the enterprise), Nation with a business scope of an agency (e.g. CDC, FDA etc.) or a Business segment (UK Pharmacy), not just an physical boundary
)

// Clone creates a deep copy of the enum
func (e LocationType) Clone() *LocationType {
	return &LocationType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *LocationType) Equals(other *LocationType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

