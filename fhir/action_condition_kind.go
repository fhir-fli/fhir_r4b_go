// Code generated by FHIR Generator. DO NOT EDIT.
// Defines the kinds of conditions that can appear on actions.
package fhir_r4b_go

// ActionConditionKind represents the FHIR ValueSet as an enumeration
type ActionConditionKind int

const (
	// Applicability: The condition describes whether or not a given action is applicable.
	ActionConditionKind_Applicability ActionConditionKind = iota
	// Start: The condition is a starting condition for the action.
	ActionConditionKind_Start ActionConditionKind = iota
	// Stop: The condition is a stop, or exit condition for the action.
	ActionConditionKind_Stop ActionConditionKind = iota
)

// String converts the enum to its string representation
func (e ActionConditionKind) String() string {
	switch e {
	case ActionConditionKind_Applicability: return "Applicability"
	case ActionConditionKind_Start: return "Start"
	case ActionConditionKind_Stop: return "Stop"
	default: return "Unknown"
	}
}

