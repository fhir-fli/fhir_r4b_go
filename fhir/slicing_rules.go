// Code generated by FHIR Generator. DO NOT EDIT.
// How slices are interpreted when evaluating an instance.
package fhir_r4b_go
// SlicingRules represents the FHIR ValueSet as an enumeration
type SlicingRules struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	SlicingRules_Closed = "closed" // Closed: No additional content is allowed other than that described by the slices in this profile.
	SlicingRules_Open = "open" // Open: Additional content is allowed anywhere in the list.
	SlicingRules_OpenAtEnd = "openAtEnd" // Open at End: Additional content is allowed, but only at the end of the list. Note that using this requires that the slices be ordered, which makes it hard to share uses. This should only be done where absolutely required.
)

// Clone creates a deep copy of the enum
func (e SlicingRules) Clone() *SlicingRules {
	return &SlicingRules{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *SlicingRules) Equals(other *SlicingRules) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

