// Code generated by FHIR Generator. DO NOT EDIT.
// How a rule statement is applied, such as adding additional consent or removing consent.
package fhir_r4b_go
// ConsentProvisionType represents the FHIR ValueSet as an enumeration
type ConsentProvisionType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ConsentProvisionType_Deny = "deny" // Opt Out: Consent is denied for actions meeting these rules.
	ConsentProvisionType_Permit = "permit" // Opt In: Consent is provided for actions meeting these rules.
)

// Clone creates a deep copy of the enum
func (e ConsentProvisionType) Clone() *ConsentProvisionType {
	return &ConsentProvisionType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ConsentProvisionType) Equals(other *ConsentProvisionType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

