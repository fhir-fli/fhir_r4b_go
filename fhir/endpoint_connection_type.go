// Code generated by FHIR Generator. DO NOT EDIT.
// This is an example value set defined by the FHIR project, that could be used to represent possible connection type profile values.
package fhir_r4b_go

// EndpointConnectionType represents the FHIR ValueSet as an enumeration
type EndpointConnectionType int

const (
	// IHE XCPD: IHE Cross Community Patient Discovery Profile (XCPD) - http://wiki.ihe.net/index.php/Cross-Community_Patient_Discovery
	EndpointConnectionType_Ihe_xcpd EndpointConnectionType = iota
	// IHE XCA: IHE Cross Community Access Profile (XCA) - http://wiki.ihe.net/index.php/Cross-Community_Access
	EndpointConnectionType_Ihe_xca EndpointConnectionType = iota
	// IHE XDR: IHE Cross-Enterprise Document Reliable Exchange (XDR) - http://wiki.ihe.net/index.php/Cross-enterprise_Document_Reliable_Interchange
	EndpointConnectionType_Ihe_xdr EndpointConnectionType = iota
	// IHE XDS: IHE Cross-Enterprise Document Sharing (XDS) - http://wiki.ihe.net/index.php/Cross-Enterprise_Document_Sharing
	EndpointConnectionType_Ihe_xds EndpointConnectionType = iota
	// IHE IID: IHE Invoke Image Display (IID) - http://wiki.ihe.net/index.php/Invoke_Image_Display
	EndpointConnectionType_Ihe_iid EndpointConnectionType = iota
	// DICOM WADO-RS: DICOMweb RESTful Image Retrieve - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.5.html
	EndpointConnectionType_Dicom_wado_rs EndpointConnectionType = iota
	// DICOM QIDO-RS: DICOMweb RESTful Image query - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html
	EndpointConnectionType_Dicom_qido_rs EndpointConnectionType = iota
	// DICOM STOW-RS: DICOMweb RESTful image sending and storage - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.6.html
	EndpointConnectionType_Dicom_stow_rs EndpointConnectionType = iota
	// DICOM WADO-URI: DICOMweb Image Retrieve - http://dicom.nema.org/dicom/2013/output/chtml/part18/sect_6.3.html
	EndpointConnectionType_Dicom_wado_uri EndpointConnectionType = iota
	// HL7 FHIR: Interact with the server interface using FHIR's RESTful interface. For details on its version/capabilities you should connect the value in Endpoint.address and retrieve the FHIR CapabilityStatement.
	EndpointConnectionType_Hl7_fhir_rest EndpointConnectionType = iota
	// HL7 FHIR Messaging: Use the servers FHIR Messaging interface. Details can be found on the messaging.html page in the FHIR Specification. The FHIR server's base address is specified in the Endpoint.address property.
	EndpointConnectionType_Hl7_fhir_msg EndpointConnectionType = iota
	// HL7 v2 MLLP: HL7v2 messages over an LLP TCP connection
	EndpointConnectionType_Hl7v2_mllp EndpointConnectionType = iota
	// Secure email: Email delivery using a digital certificate to encrypt the content using the public key, receiver must have the private key to decrypt the content
	EndpointConnectionType_Secure_email EndpointConnectionType = iota
	// Direct Project: Direct Project information - http://wiki.directproject.org/
	EndpointConnectionType_Direct_project EndpointConnectionType = iota
)

// String converts the enum to its string representation
func (e EndpointConnectionType) String() string {
	switch e {
	case EndpointConnectionType_Ihe_xcpd: return "IHE XCPD"
	case EndpointConnectionType_Ihe_xca: return "IHE XCA"
	case EndpointConnectionType_Ihe_xdr: return "IHE XDR"
	case EndpointConnectionType_Ihe_xds: return "IHE XDS"
	case EndpointConnectionType_Ihe_iid: return "IHE IID"
	case EndpointConnectionType_Dicom_wado_rs: return "DICOM WADO-RS"
	case EndpointConnectionType_Dicom_qido_rs: return "DICOM QIDO-RS"
	case EndpointConnectionType_Dicom_stow_rs: return "DICOM STOW-RS"
	case EndpointConnectionType_Dicom_wado_uri: return "DICOM WADO-URI"
	case EndpointConnectionType_Hl7_fhir_rest: return "HL7 FHIR"
	case EndpointConnectionType_Hl7_fhir_msg: return "HL7 FHIR Messaging"
	case EndpointConnectionType_Hl7v2_mllp: return "HL7 v2 MLLP"
	case EndpointConnectionType_Secure_email: return "Secure email"
	case EndpointConnectionType_Direct_project: return "Direct Project"
	default: return "Unknown"
	}
}

