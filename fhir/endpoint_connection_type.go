// Code generated by FHIR Generator. DO NOT EDIT.
// This is an example value set defined by the FHIR project, that could be used to represent possible connection type profile values.
package fhir_r4b_go
// EndpointConnectionType represents the FHIR ValueSet as an enumeration
type EndpointConnectionType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	EndpointConnectionType_Ihe_xcpd = "ihe-xcpd" // IHE XCPD: IHE Cross Community Patient Discovery Profile (XCPD) - http://wiki.ihe.net/index.php/Cross-Community_Patient_Discovery
	EndpointConnectionType_Ihe_xca = "ihe-xca" // IHE XCA: IHE Cross Community Access Profile (XCA) - http://wiki.ihe.net/index.php/Cross-Community_Access
	EndpointConnectionType_Ihe_xdr = "ihe-xdr" // IHE XDR: IHE Cross-Enterprise Document Reliable Exchange (XDR) - http://wiki.ihe.net/index.php/Cross-enterprise_Document_Reliable_Interchange
	EndpointConnectionType_Ihe_xds = "ihe-xds" // IHE XDS: IHE Cross-Enterprise Document Sharing (XDS) - http://wiki.ihe.net/index.php/Cross-Enterprise_Document_Sharing
	EndpointConnectionType_Ihe_iid = "ihe-iid" // IHE IID: IHE Invoke Image Display (IID) - http://wiki.ihe.net/index.php/Invoke_Image_Display
	EndpointConnectionType_Dicom_wado_rs = "dicom-wado-rs" // DICOM WADO-RS: DICOMweb RESTful Image Retrieve - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.5.html
	EndpointConnectionType_Dicom_qido_rs = "dicom-qido-rs" // DICOM QIDO-RS: DICOMweb RESTful Image query - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html
	EndpointConnectionType_Dicom_stow_rs = "dicom-stow-rs" // DICOM STOW-RS: DICOMweb RESTful image sending and storage - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.6.html
	EndpointConnectionType_Dicom_wado_uri = "dicom-wado-uri" // DICOM WADO-URI: DICOMweb Image Retrieve - http://dicom.nema.org/dicom/2013/output/chtml/part18/sect_6.3.html
	EndpointConnectionType_Hl7_fhir_rest = "hl7-fhir-rest" // HL7 FHIR: Interact with the server interface using FHIR's RESTful interface. For details on its version/capabilities you should connect the value in Endpoint.address and retrieve the FHIR CapabilityStatement.
	EndpointConnectionType_Hl7_fhir_msg = "hl7-fhir-msg" // HL7 FHIR Messaging: Use the servers FHIR Messaging interface. Details can be found on the messaging.html page in the FHIR Specification. The FHIR server's base address is specified in the Endpoint.address property.
	EndpointConnectionType_Hl7v2_mllp = "hl7v2-mllp" // HL7 v2 MLLP: HL7v2 messages over an LLP TCP connection
	EndpointConnectionType_Secure_email = "secure-email" // Secure email: Email delivery using a digital certificate to encrypt the content using the public key, receiver must have the private key to decrypt the content
	EndpointConnectionType_Direct_project = "direct-project" // Direct Project: Direct Project information - http://wiki.directproject.org/
)

// Clone creates a deep copy of the enum
func (e EndpointConnectionType) Clone() *EndpointConnectionType {
	return &EndpointConnectionType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *EndpointConnectionType) Equals(other *EndpointConnectionType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

