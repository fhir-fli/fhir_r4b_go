// Code generated by FHIR Generator. DO NOT EDIT.
// How a type relates to its baseDefinition.
package fhir_r4b_go

// TypeDerivationRule represents the FHIR ValueSet as an enumeration
type TypeDerivationRule int

const (
	// Specialization: This definition defines a new type that adds additional elements to the base type.
	TypeDerivationRule_Specialization TypeDerivationRule = iota
	// Constraint: This definition adds additional rules to an existing concrete type.
	TypeDerivationRule_Constraint TypeDerivationRule = iota
)

// String converts the enum to its string representation
func (e TypeDerivationRule) String() string {
	switch e {
	case TypeDerivationRule_Specialization: return "Specialization"
	case TypeDerivationRule_Constraint: return "Constraint"
	default: return "Unknown"
	}
}

