// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes examples of Benefit Category codes.
package fhir_r4b_go
// BenefitCategoryCodes represents the FHIR ValueSet as an enumeration
type BenefitCategoryCodes struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	BenefitCategoryCodes_Value1 = "1" // Medical Care: Medical Care.
	BenefitCategoryCodes_Value2 = "2" // Surgical: Surgical.
	BenefitCategoryCodes_Value3 = "3" // Consultation: Consultation.
	BenefitCategoryCodes_Value4 = "4" // Diagnostic XRay: Diagnostic XRay.
	BenefitCategoryCodes_Value5 = "5" // Diagnostic Lab: Diagnostic Lab.
	BenefitCategoryCodes_Value14 = "14" // Renal Supplies: Renal Supplies excluding Dialysis.
	BenefitCategoryCodes_Value23 = "23" // Diagnostic Dental: Diagnostic Dental.
	BenefitCategoryCodes_Value24 = "24" // Periodontics: Periodontics.
	BenefitCategoryCodes_Value25 = "25" // Restorative: Restorative.
	BenefitCategoryCodes_Value26 = "26" // Endodontics: Endodontics.
	BenefitCategoryCodes_Value27 = "27" // Maxillofacial Prosthetics: Maxillofacial Prosthetics.
	BenefitCategoryCodes_Value28 = "28" // Adjunctive Dental Services: Adjunctive Dental Services.
	BenefitCategoryCodes_Value30 = "30" // Health Benefit Plan Coverage: Health Benefit Plan Coverage.
	BenefitCategoryCodes_Value35 = "35" // Dental Care: Dental Care.
	BenefitCategoryCodes_Value36 = "36" // Dental Crowns: Dental Crowns.
	BenefitCategoryCodes_Value37 = "37" // Dental Accident: Dental Accident.
	BenefitCategoryCodes_Value49 = "49" // Hospital Room and Board: Hospital Room and Board.
	BenefitCategoryCodes_Value55 = "55" // Major Medical: Major Medical.
	BenefitCategoryCodes_Value56 = "56" // Medically Related Transportation: Medically Related Transportation.
	BenefitCategoryCodes_Value61 = "61" // In-vitro Fertilization: In-vitro Fertilization.
	BenefitCategoryCodes_Value62 = "62" // MRI Scan: MRI Scan.
	BenefitCategoryCodes_Value63 = "63" // Donor Procedures: Donor Procedures such as organ harvest.
	BenefitCategoryCodes_Value69 = "69" // Maternity: Maternity.
	BenefitCategoryCodes_Value76 = "76" // Renal Dialysis: Renal dialysis.
	BenefitCategoryCodes_F1 = "F1" // Medical Coverage: Medical Coverage.
	BenefitCategoryCodes_F3 = "F3" // Dental Coverage: Dental Coverage.
	BenefitCategoryCodes_F4 = "F4" // Hearing Coverage: Hearing Coverage.
	BenefitCategoryCodes_F6 = "F6" // Vision Coverage: Vision Coverage.
)

// Clone creates a deep copy of the enum
func (e BenefitCategoryCodes) Clone() *BenefitCategoryCodes {
	return &BenefitCategoryCodes{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *BenefitCategoryCodes) Equals(other *BenefitCategoryCodes) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

