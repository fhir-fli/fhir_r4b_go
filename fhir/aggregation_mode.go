// Code generated by FHIR Generator. DO NOT EDIT.
// How resource references can be aggregated.
package fhir_r4b_go
// AggregationMode represents the FHIR ValueSet as an enumeration
type AggregationMode struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	AggregationMode_Contained = "contained" // Contained: The reference is a local reference to a contained resource.
	AggregationMode_Referenced = "referenced" // Referenced: The reference to a resource that has to be resolved externally to the resource that includes the reference.
	AggregationMode_Bundled = "bundled" // Bundled: The resource the reference points to will be found in the same bundle as the resource that includes the reference.
)

// Clone creates a deep copy of the enum
func (e AggregationMode) Clone() *AggregationMode {
	return &AggregationMode{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *AggregationMode) Equals(other *AggregationMode) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

