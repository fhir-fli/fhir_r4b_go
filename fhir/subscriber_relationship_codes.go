// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes codes for the relationship between the Subscriber and the Beneficiary (insured/covered party/patient).
package fhir_r4b_go

// SubscriberRelationshipCodes represents the FHIR ValueSet as an enumeration
type SubscriberRelationshipCodes int

const (
	// Child: The Beneficiary is a child of the Subscriber
	SubscriberRelationshipCodes_Child SubscriberRelationshipCodes = iota
	// Parent: The Beneficiary is a parent of the Subscriber
	SubscriberRelationshipCodes_Parent SubscriberRelationshipCodes = iota
	// Spouse: The Beneficiary is a spouse or equivalent of the Subscriber
	SubscriberRelationshipCodes_Spouse SubscriberRelationshipCodes = iota
	// Common Law Spouse: The Beneficiary is a common law spouse or equivalent of the Subscriber
	SubscriberRelationshipCodes_Common SubscriberRelationshipCodes = iota
	// Other: The Beneficiary has some other relationship the Subscriber
	SubscriberRelationshipCodes_Other SubscriberRelationshipCodes = iota
	// Self: The Beneficiary is the Subscriber
	SubscriberRelationshipCodes_Self SubscriberRelationshipCodes = iota
	// Injured Party: The Beneficiary is covered under insurance of the subscriber due to an injury.
	SubscriberRelationshipCodes_Injured SubscriberRelationshipCodes = iota
)

// String converts the enum to its string representation
func (e SubscriberRelationshipCodes) String() string {
	switch e {
	case SubscriberRelationshipCodes_Child: return "Child"
	case SubscriberRelationshipCodes_Parent: return "Parent"
	case SubscriberRelationshipCodes_Spouse: return "Spouse"
	case SubscriberRelationshipCodes_Common: return "Common Law Spouse"
	case SubscriberRelationshipCodes_Other: return "Other"
	case SubscriberRelationshipCodes_Self: return "Self"
	case SubscriberRelationshipCodes_Injured: return "Injured Party"
	default: return "Unknown"
	}
}

