// Code generated by FHIR Generator. DO NOT EDIT.
// Defines selection behavior of a group.
package fhir_r4b_go

// ActionSelectionBehavior represents the FHIR ValueSet as an enumeration
type ActionSelectionBehavior int

const (
	// Any: Any number of the actions in the group may be chosen, from zero to all.
	ActionSelectionBehavior_Any ActionSelectionBehavior = iota
	// All: All the actions in the group must be selected as a single unit.
	ActionSelectionBehavior_All ActionSelectionBehavior = iota
	// All Or None: All the actions in the group are meant to be chosen as a single unit: either all must be selected by the end user, or none may be selected.
	ActionSelectionBehavior_All_or_none ActionSelectionBehavior = iota
	// Exactly One: The end user must choose one and only one of the selectable actions in the group. The user SHALL NOT choose none of the actions in the group.
	ActionSelectionBehavior_Exactly_one ActionSelectionBehavior = iota
	// At Most One: The end user may choose zero or at most one of the actions in the group.
	ActionSelectionBehavior_At_most_one ActionSelectionBehavior = iota
	// One Or More: The end user must choose a minimum of one, and as many additional as desired.
	ActionSelectionBehavior_One_or_more ActionSelectionBehavior = iota
)

// String converts the enum to its string representation
func (e ActionSelectionBehavior) String() string {
	switch e {
	case ActionSelectionBehavior_Any: return "Any"
	case ActionSelectionBehavior_All: return "All"
	case ActionSelectionBehavior_All_or_none: return "All Or None"
	case ActionSelectionBehavior_Exactly_one: return "Exactly One"
	case ActionSelectionBehavior_At_most_one: return "At Most One"
	case ActionSelectionBehavior_One_or_more: return "One Or More"
	default: return "Unknown"
	}
}

