// Code generated by FHIR Generator. DO NOT EDIT.
// Defines selection behavior of a group.
package fhir_r4b_go
// ActionSelectionBehavior represents the FHIR ValueSet as an enumeration
type ActionSelectionBehavior struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ActionSelectionBehavior_Any = "any" // Any: Any number of the actions in the group may be chosen, from zero to all.
	ActionSelectionBehavior_All = "all" // All: All the actions in the group must be selected as a single unit.
	ActionSelectionBehavior_All_or_none = "all-or-none" // All Or None: All the actions in the group are meant to be chosen as a single unit: either all must be selected by the end user, or none may be selected.
	ActionSelectionBehavior_Exactly_one = "exactly-one" // Exactly One: The end user must choose one and only one of the selectable actions in the group. The user SHALL NOT choose none of the actions in the group.
	ActionSelectionBehavior_At_most_one = "at-most-one" // At Most One: The end user may choose zero or at most one of the actions in the group.
	ActionSelectionBehavior_One_or_more = "one-or-more" // One Or More: The end user must choose a minimum of one, and as many additional as desired.
)

// Clone creates a deep copy of the enum
func (e ActionSelectionBehavior) Clone() *ActionSelectionBehavior {
	return &ActionSelectionBehavior{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ActionSelectionBehavior) Equals(other *ActionSelectionBehavior) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

