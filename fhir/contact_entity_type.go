// Code generated by FHIR Generator. DO NOT EDIT.
// This example value set defines a set of codes that can be used to indicate the purpose for which you would contact a contact party.
package fhir_r4b_go

// ContactEntityType represents the FHIR ValueSet as an enumeration
type ContactEntityType int

const (
	// Billing: Contact details for information regarding to billing/general finance enquiries.
	ContactEntityType_BILL ContactEntityType = iota
	// Administrative: Contact details for administrative enquiries.
	ContactEntityType_ADMIN ContactEntityType = iota
	// Human Resource: Contact details for issues related to Human Resources, such as staff matters, OH&S etc.
	ContactEntityType_HR ContactEntityType = iota
	// Payor: Contact details for dealing with issues related to insurance claims/adjudication/payment.
	ContactEntityType_PAYOR ContactEntityType = iota
	// Patient: Generic information contact for patients.
	ContactEntityType_PATINF ContactEntityType = iota
	// Press: Dedicated contact point for matters relating to press enquiries.
	ContactEntityType_PRESS ContactEntityType = iota
)

// String converts the enum to its string representation
func (e ContactEntityType) String() string {
	switch e {
	case ContactEntityType_BILL: return "Billing"
	case ContactEntityType_ADMIN: return "Administrative"
	case ContactEntityType_HR: return "Human Resource"
	case ContactEntityType_PAYOR: return "Payor"
	case ContactEntityType_PATINF: return "Patient"
	case ContactEntityType_PRESS: return "Press"
	default: return "Unknown"
	}
}

