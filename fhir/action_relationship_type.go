// Code generated by FHIR Generator. DO NOT EDIT.
// Defines the types of relationships between actions.
package fhir_r4b_go
// ActionRelationshipType represents the FHIR ValueSet as an enumeration
type ActionRelationshipType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ActionRelationshipType_Before_start = "before-start" // Before Start: The action must be performed before the start of the related action.
	ActionRelationshipType_Before = "before" // Before: The action must be performed before the related action.
	ActionRelationshipType_Before_end = "before-end" // Before End: The action must be performed before the end of the related action.
	ActionRelationshipType_Concurrent_with_start = "concurrent-with-start" // Concurrent With Start: The action must be performed concurrent with the start of the related action.
	ActionRelationshipType_Concurrent = "concurrent" // Concurrent: The action must be performed concurrent with the related action.
	ActionRelationshipType_Concurrent_with_end = "concurrent-with-end" // Concurrent With End: The action must be performed concurrent with the end of the related action.
	ActionRelationshipType_After_start = "after-start" // After Start: The action must be performed after the start of the related action.
	ActionRelationshipType_After = "after" // After: The action must be performed after the related action.
	ActionRelationshipType_After_end = "after-end" // After End: The action must be performed after the end of the related action.
)

// Clone creates a deep copy of the enum
func (e ActionRelationshipType) Clone() *ActionRelationshipType {
	return &ActionRelationshipType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ActionRelationshipType) Equals(other *ActionRelationshipType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

