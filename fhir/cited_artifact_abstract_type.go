// Code generated by FHIR Generator. DO NOT EDIT.
// Used to express the reason and specific aspect for the variant abstract, such as language and specific language.
package fhir_r4b_go

// CitedArtifactAbstractType represents the FHIR ValueSet as an enumeration
type CitedArtifactAbstractType int

const (
	// Primary human use: Human-friendly main or official abstract
	CitedArtifactAbstractType_Primary_human_use CitedArtifactAbstractType = iota
	// Primary machine use: Machine-friendly main or official abstract
	CitedArtifactAbstractType_Primary_machine_use CitedArtifactAbstractType = iota
	// Truncated: Truncated abstract
	CitedArtifactAbstractType_Truncated CitedArtifactAbstractType = iota
	// Short abstract: Brief abstract, for use when abstracts are provided in different sizes or lengths
	CitedArtifactAbstractType_Short_abstract CitedArtifactAbstractType = iota
	// Long abstract: Long version of the abstract, for use when abstracts are provided in different sizes or lengths
	CitedArtifactAbstractType_Long_abstract CitedArtifactAbstractType = iota
	// Plain language: Additional form of abstract written for the general public
	CitedArtifactAbstractType_Plain_language CitedArtifactAbstractType = iota
	// Different publisher for abstract: Abstract produced by a different publisher than the cited artifact
	CitedArtifactAbstractType_Different_publisher CitedArtifactAbstractType = iota
	// Different language: Additional form of abstract in a different language
	CitedArtifactAbstractType_Language CitedArtifactAbstractType = iota
	// Different language derived from autotranslation: Machine translated form of abstract in a different language, language element codes the language into which it was translated by machine
	CitedArtifactAbstractType_Autotranslated CitedArtifactAbstractType = iota
	// Different text in additional Medline entry: Alternative form of abstract in two or more Medline entries
	CitedArtifactAbstractType_Duplicate_pmid CitedArtifactAbstractType = iota
	// Different text in an earlier version: Alternative form of abstract in an earlier version such as epub ahead of print
	CitedArtifactAbstractType_Earlier_abstract CitedArtifactAbstractType = iota
)

// String converts the enum to its string representation
func (e CitedArtifactAbstractType) String() string {
	switch e {
	case CitedArtifactAbstractType_Primary_human_use: return "Primary human use"
	case CitedArtifactAbstractType_Primary_machine_use: return "Primary machine use"
	case CitedArtifactAbstractType_Truncated: return "Truncated"
	case CitedArtifactAbstractType_Short_abstract: return "Short abstract"
	case CitedArtifactAbstractType_Long_abstract: return "Long abstract"
	case CitedArtifactAbstractType_Plain_language: return "Plain language"
	case CitedArtifactAbstractType_Different_publisher: return "Different publisher for abstract"
	case CitedArtifactAbstractType_Language: return "Different language"
	case CitedArtifactAbstractType_Autotranslated: return "Different language derived from autotranslation"
	case CitedArtifactAbstractType_Duplicate_pmid: return "Different text in additional Medline entry"
	case CitedArtifactAbstractType_Earlier_abstract: return "Different text in an earlier version"
	default: return "Unknown"
	}
}

