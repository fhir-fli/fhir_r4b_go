// Code generated by FHIR Generator. DO NOT EDIT.
// Used to express the reason and specific aspect for the variant abstract, such as language and specific language.
package fhir_r4b_go
// CitedArtifactAbstractType represents the FHIR ValueSet as an enumeration
type CitedArtifactAbstractType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	CitedArtifactAbstractType_Primary_human_use = "primary-human-use" // Primary human use: Human-friendly main or official abstract
	CitedArtifactAbstractType_Primary_machine_use = "primary-machine-use" // Primary machine use: Machine-friendly main or official abstract
	CitedArtifactAbstractType_Truncated = "truncated" // Truncated: Truncated abstract
	CitedArtifactAbstractType_Short_abstract = "short-abstract" // Short abstract: Brief abstract, for use when abstracts are provided in different sizes or lengths
	CitedArtifactAbstractType_Long_abstract = "long-abstract" // Long abstract: Long version of the abstract, for use when abstracts are provided in different sizes or lengths
	CitedArtifactAbstractType_Plain_language = "plain-language" // Plain language: Additional form of abstract written for the general public
	CitedArtifactAbstractType_Different_publisher = "different-publisher" // Different publisher for abstract: Abstract produced by a different publisher than the cited artifact
	CitedArtifactAbstractType_Language = "language" // Different language: Additional form of abstract in a different language
	CitedArtifactAbstractType_Autotranslated = "autotranslated" // Different language derived from autotranslation: Machine translated form of abstract in a different language, language element codes the language into which it was translated by machine
	CitedArtifactAbstractType_Duplicate_pmid = "duplicate-pmid" // Different text in additional Medline entry: Alternative form of abstract in two or more Medline entries
	CitedArtifactAbstractType_Earlier_abstract = "earlier-abstract" // Different text in an earlier version: Alternative form of abstract in an earlier version such as epub ahead of print
)

// Clone creates a deep copy of the enum
func (e CitedArtifactAbstractType) Clone() *CitedArtifactAbstractType {
	return &CitedArtifactAbstractType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *CitedArtifactAbstractType) Equals(other *CitedArtifactAbstractType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

