// Code generated by FHIR Generator. DO NOT EDIT.
// Type of part of a name for a Medicinal Product.
package fhir_r4b_go
// ProductNamePartType represents the FHIR ValueSet as an enumeration
type ProductNamePartType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ProductNamePartType_FullName = "FullName" // Full name: 
	ProductNamePartType_InventedNamePart = "InventedNamePart" // Invented name part: 
	ProductNamePartType_ScientificNamePart = "ScientificNamePart" // Scientific name part: 
	ProductNamePartType_StrengthPart = "StrengthPart" // Strength part: 
	ProductNamePartType_DoseFormPart = "DoseFormPart" // Pharmaceutical dose form part: 
	ProductNamePartType_FormulationPart = "FormulationPart" // Formulation part: 
	ProductNamePartType_IntendedUsePart = "IntendedUsePart" // Intended use part: 
	ProductNamePartType_PopulationPart = "PopulationPart" // Target population part: 
	ProductNamePartType_ContainerPart = "ContainerPart" // Container or pack part: 
	ProductNamePartType_DevicePart = "DevicePart" // Device part: 
	ProductNamePartType_TrademarkOrCompanyPart = "TrademarkOrCompanyPart" // Trademark or company name part: 
	ProductNamePartType_TimeOrPeriodPart = "TimeOrPeriodPart" // Time/Period part: 
	ProductNamePartType_FlavorPart = "FlavorPart" // Flavor part: 
	ProductNamePartType_DelimiterPart = "DelimiterPart" // Delimiter part: 
	ProductNamePartType_LegacyNamePart = "LegacyNamePart" // Legacy name: 
	ProductNamePartType_SpeciesNamePart = "SpeciesNamePart" // Target species name part: 
)

// Clone creates a deep copy of the enum
func (e ProductNamePartType) Clone() *ProductNamePartType {
	return &ProductNamePartType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ProductNamePartType) Equals(other *ProductNamePartType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

