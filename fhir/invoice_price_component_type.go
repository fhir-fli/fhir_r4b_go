// Code generated by FHIR Generator. DO NOT EDIT.
// Codes indicating the kind of the price component.
package fhir_r4b_go
// InvoicePriceComponentType represents the FHIR ValueSet as an enumeration
type InvoicePriceComponentType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	InvoicePriceComponentType_Base = "base" // base price: the amount is the base price used for calculating the total price before applying surcharges, discount or taxes.
	InvoicePriceComponentType_Surcharge = "surcharge" // surcharge: the amount is a surcharge applied on the base price.
	InvoicePriceComponentType_Deduction = "deduction" // deduction: the amount is a deduction applied on the base price.
	InvoicePriceComponentType_Discount = "discount" // discount: the amount is a discount applied on the base price.
	InvoicePriceComponentType_Tax = "tax" // tax: the amount is the tax component of the total price.
	InvoicePriceComponentType_Informational = "informational" // informational: the amount is of informational character, it has not been applied in the calculation of the total price.
)

// Clone creates a deep copy of the enum
func (e InvoicePriceComponentType) Clone() *InvoicePriceComponentType {
	return &InvoicePriceComponentType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *InvoicePriceComponentType) Equals(other *InvoicePriceComponentType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

