// Code generated by FHIR Generator. DO NOT EDIT.
// Which type a compartment definition describes.
package fhir_r4b_go

// CompartmentType represents the FHIR ValueSet as an enumeration
type CompartmentType int

const (
	// Patient: The compartment definition is for the patient compartment.
	CompartmentType_Patient CompartmentType = iota
	// Encounter: The compartment definition is for the encounter compartment.
	CompartmentType_Encounter CompartmentType = iota
	// RelatedPerson: The compartment definition is for the related-person compartment.
	CompartmentType_RelatedPerson CompartmentType = iota
	// Practitioner: The compartment definition is for the practitioner compartment.
	CompartmentType_Practitioner CompartmentType = iota
	// Device: The compartment definition is for the device compartment.
	CompartmentType_Device CompartmentType = iota
)

// String converts the enum to its string representation
func (e CompartmentType) String() string {
	switch e {
	case CompartmentType_Patient: return "Patient"
	case CompartmentType_Encounter: return "Encounter"
	case CompartmentType_RelatedPerson: return "RelatedPerson"
	case CompartmentType_Practitioner: return "Practitioner"
	case CompartmentType_Device: return "Device"
	default: return "Unknown"
	}
}

