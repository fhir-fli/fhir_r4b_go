// Code generated by FHIR Generator. DO NOT EDIT.
// Preferred value set for Condition Clinical Status.
package fhir_r4b_go
// ConditionClinicalStatusCodes represents the FHIR ValueSet as an enumeration
type ConditionClinicalStatusCodes struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ConditionClinicalStatusCodes_Active = "active" // Active: The subject is currently experiencing the symptoms of the condition or there is evidence of the condition.
	ConditionClinicalStatusCodes_Recurrence = "recurrence" // Recurrence: The subject is experiencing a re-occurence or repeating of a previously resolved condition, e.g. urinary tract infection, pancreatitis, cholangitis, conjunctivitis.
	ConditionClinicalStatusCodes_Relapse = "relapse" // Relapse: The subject is experiencing a return of a condition, or signs and symptoms after a period of improvement or remission, e.g. relapse of cancer, multiple sclerosis, rheumatoid arthritis, systemic lupus erythematosus, bipolar disorder, [psychotic relapse of] schizophrenia, etc.
	ConditionClinicalStatusCodes_Inactive = "inactive" // Inactive: The subject is no longer experiencing the symptoms of the condition or there is no longer evidence of the condition.
	ConditionClinicalStatusCodes_Remission = "remission" // Remission: The subject is no longer experiencing the symptoms of the condition, but there is a risk of the symptoms returning.
	ConditionClinicalStatusCodes_Resolved = "resolved" // Resolved: The subject is no longer experiencing the symptoms of the condition and there is a negligible perceived risk of the symptoms returning.
)

// Clone creates a deep copy of the enum
func (e ConditionClinicalStatusCodes) Clone() *ConditionClinicalStatusCodes {
	return &ConditionClinicalStatusCodes{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ConditionClinicalStatusCodes) Equals(other *ConditionClinicalStatusCodes) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

