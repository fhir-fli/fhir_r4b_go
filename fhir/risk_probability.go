// Code generated by FHIR Generator. DO NOT EDIT.
// Codes representing the likelihood of a particular outcome in a risk assessment.
package fhir_r4b_go

// RiskProbability represents the FHIR ValueSet as an enumeration
type RiskProbability int

const (
	// Negligible likelihood: The specified outcome is exceptionally unlikely.
	RiskProbability_Negligible RiskProbability = iota
	// Low likelihood: The specified outcome is possible but unlikely.
	RiskProbability_Low RiskProbability = iota
	// Moderate likelihood: The specified outcome has a reasonable likelihood of occurrence.
	RiskProbability_Moderate RiskProbability = iota
	// High likelihood: The specified outcome is more likely to occur than not.
	RiskProbability_High RiskProbability = iota
	// Certain: The specified outcome is effectively guaranteed.
	RiskProbability_Certain RiskProbability = iota
)

// String converts the enum to its string representation
func (e RiskProbability) String() string {
	switch e {
	case RiskProbability_Negligible: return "Negligible likelihood"
	case RiskProbability_Low: return "Low likelihood"
	case RiskProbability_Moderate: return "Moderate likelihood"
	case RiskProbability_High: return "High likelihood"
	case RiskProbability_Certain: return "Certain"
	default: return "Unknown"
	}
}

