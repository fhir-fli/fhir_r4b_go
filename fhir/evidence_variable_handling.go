// Code generated by FHIR Generator. DO NOT EDIT.
// The handling of the variable in statistical analysis for exposures or outcomes (E.g. Dichotomous, Continuous, Descriptive).
package fhir_r4b_go
// EvidenceVariableHandling represents the FHIR ValueSet as an enumeration
type EvidenceVariableHandling struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	EvidenceVariableHandling_Continuous = "continuous" // continuous variable: A continuous variable is one for which, within the limits the variable ranges, any value is possible (from STATO http://purl.obolibrary.org/obo/STATO_0000251).
	EvidenceVariableHandling_Dichotomous = "dichotomous" // dichotomous variable: A dichotomous variable is a categorical variable which is defined to have only 2 categories or possible values (from STATO http://purl.obolibrary.org/obo/STATO_0000090).
	EvidenceVariableHandling_Ordinal = "ordinal" // ordinal variable: An ordinal variable is a categorical variable where the discrete possible values are ordered or correspond to an implicit ranking (from STATO http://purl.obolibrary.org/obo/STATO_0000228).
	EvidenceVariableHandling_Polychotomous = "polychotomous" // polychotomous variable: A polychotomous variable is a categorical variable which is defined to have minimally 2 categories or possible values. (from STATO http://purl.obolibrary.org/obo/STATO_0000087). Suggestion to limit code use to situations when neither dichotomous nor ordinal variables apply.
)

// Clone creates a deep copy of the enum
func (e EvidenceVariableHandling) Clone() *EvidenceVariableHandling {
	return &EvidenceVariableHandling{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *EvidenceVariableHandling) Equals(other *EvidenceVariableHandling) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

