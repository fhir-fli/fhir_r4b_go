// Code generated by FHIR Generator. DO NOT EDIT.
// The type of relationship between reports.
package fhir_r4b_go

// ReportRelationshipType represents the FHIR ValueSet as an enumeration
type ReportRelationshipType int

const (
	// Replaces: This document replaces or supersedes the target document.
	ReportRelationshipType_Replaces ReportRelationshipType = iota
	// Amends: This document notes corrections or changes to replace or supersede parts of the target document.
	ReportRelationshipType_Amends ReportRelationshipType = iota
	// Appends: This document adds additional information to the target document.
	ReportRelationshipType_Appends ReportRelationshipType = iota
	// Transforms: This document was generated by transforming the target document (eg format or language conversion).
	ReportRelationshipType_Transforms ReportRelationshipType = iota
	// Replaced With: This document was.
	ReportRelationshipType_ReplacedWith ReportRelationshipType = iota
	// Amended With: This document was.
	ReportRelationshipType_AmendedWith ReportRelationshipType = iota
	// Appended With: This document was.
	ReportRelationshipType_AppendedWith ReportRelationshipType = iota
	// Transformed With: This document was.
	ReportRelationshipType_TransformedWith ReportRelationshipType = iota
)

// String converts the enum to its string representation
func (e ReportRelationshipType) String() string {
	switch e {
	case ReportRelationshipType_Replaces: return "Replaces"
	case ReportRelationshipType_Amends: return "Amends"
	case ReportRelationshipType_Appends: return "Appends"
	case ReportRelationshipType_Transforms: return "Transforms"
	case ReportRelationshipType_ReplacedWith: return "Replaced With"
	case ReportRelationshipType_AmendedWith: return "Amended With"
	case ReportRelationshipType_AppendedWith: return "Appended With"
	case ReportRelationshipType_TransformedWith: return "Transformed With"
	default: return "Unknown"
	}
}

