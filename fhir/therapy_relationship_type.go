// Code generated by FHIR Generator. DO NOT EDIT.
// Classification of relationship between a therapy and a contraindication or an indication.
package fhir_r4b_go
// TherapyRelationshipType represents the FHIR ValueSet as an enumeration
type TherapyRelationshipType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	TherapyRelationshipType_Contraindicated_only_with = "contraindicated-only-with" // Only contraindicated if the other therapy is given: Only contraindicated if the other therapy is given
	TherapyRelationshipType_Contraindicated_except_with = "contraindicated-except-with" // Contraindicated unless the other therapy is given: Contraindicated unless the other therapy is given
	TherapyRelationshipType_Indicated_only_with = "indicated-only-with" // Indicated only when the other therapy is given (co-occurrent): Indicated only when the other therapy is given (co-occurrent)
	TherapyRelationshipType_Indicated_except_with = "indicated-except-with" // Indicated except when the other therapy is given: Indicated except when the other therapy is given
	TherapyRelationshipType_Indicated_only_before = "indicated-only-before" // Indicated only if the other therapy is planned to be given afterwards (prep): Indicated only if the other therapy is planned to be given afterwards (prep)
	TherapyRelationshipType_Replace_other_therapy = "replace-other-therapy" // Indicated to replace the other therapy: Indicated to replace the other therapy
	TherapyRelationshipType_Replace_other_therapy_contraindicated = "replace-other-therapy-contraindicated" // Indicated to replace the other contraindicated therapy: Indicated to replace the other contraindicated therapy.
	TherapyRelationshipType_Replace_other_therapy_not_tolerated = "replace-other-therapy-not-tolerated" // Indicated to replace the other therapy not well tolerated by patient: Indicated to replace the other therapy not well tolerated by patient
	TherapyRelationshipType_Replace_other_therapy_not_effective = "replace-other-therapy-not-effective" // Indicated to replace the other therapy not effective on patient: Indicated to replace the other therapy not effective on patient
)

// Clone creates a deep copy of the enum
func (e TherapyRelationshipType) Clone() *TherapyRelationshipType {
	return &TherapyRelationshipType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *TherapyRelationshipType) Equals(other *TherapyRelationshipType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

