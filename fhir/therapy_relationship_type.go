// Code generated by FHIR Generator. DO NOT EDIT.
// Classification of relationship between a therapy and a contraindication or an indication.
package fhir_r4b_go

// TherapyRelationshipType represents the FHIR ValueSet as an enumeration
type TherapyRelationshipType int

const (
	// Only contraindicated if the other therapy is given: Only contraindicated if the other therapy is given
	TherapyRelationshipType_Contraindicated_only_with TherapyRelationshipType = iota
	// Contraindicated unless the other therapy is given: Contraindicated unless the other therapy is given
	TherapyRelationshipType_Contraindicated_except_with TherapyRelationshipType = iota
	// Indicated only when the other therapy is given (co-occurrent): Indicated only when the other therapy is given (co-occurrent)
	TherapyRelationshipType_Indicated_only_with TherapyRelationshipType = iota
	// Indicated except when the other therapy is given: Indicated except when the other therapy is given
	TherapyRelationshipType_Indicated_except_with TherapyRelationshipType = iota
	// Indicated only if the other therapy is planned to be given afterwards (prep): Indicated only if the other therapy is planned to be given afterwards (prep)
	TherapyRelationshipType_Indicated_only_before TherapyRelationshipType = iota
	// Indicated to replace the other therapy: Indicated to replace the other therapy
	TherapyRelationshipType_Replace_other_therapy TherapyRelationshipType = iota
	// Indicated to replace the other contraindicated therapy: Indicated to replace the other contraindicated therapy.
	TherapyRelationshipType_Replace_other_therapy_contraindicated TherapyRelationshipType = iota
	// Indicated to replace the other therapy not well tolerated by patient: Indicated to replace the other therapy not well tolerated by patient
	TherapyRelationshipType_Replace_other_therapy_not_tolerated TherapyRelationshipType = iota
	// Indicated to replace the other therapy not effective on patient: Indicated to replace the other therapy not effective on patient
	TherapyRelationshipType_Replace_other_therapy_not_effective TherapyRelationshipType = iota
)

// String converts the enum to its string representation
func (e TherapyRelationshipType) String() string {
	switch e {
	case TherapyRelationshipType_Contraindicated_only_with: return "Only contraindicated if the other therapy is given"
	case TherapyRelationshipType_Contraindicated_except_with: return "Contraindicated unless the other therapy is given"
	case TherapyRelationshipType_Indicated_only_with: return "Indicated only when the other therapy is given (co-occurrent)"
	case TherapyRelationshipType_Indicated_except_with: return "Indicated except when the other therapy is given"
	case TherapyRelationshipType_Indicated_only_before: return "Indicated only if the other therapy is planned to be given afterwards (prep)"
	case TherapyRelationshipType_Replace_other_therapy: return "Indicated to replace the other therapy"
	case TherapyRelationshipType_Replace_other_therapy_contraindicated: return "Indicated to replace the other contraindicated therapy"
	case TherapyRelationshipType_Replace_other_therapy_not_tolerated: return "Indicated to replace the other therapy not well tolerated by patient"
	case TherapyRelationshipType_Replace_other_therapy_not_effective: return "Indicated to replace the other therapy not effective on patient"
	default: return "Unknown"
	}
}

