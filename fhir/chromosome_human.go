// Code generated by FHIR Generator. DO NOT EDIT.
// Chromosome number for human.
package fhir_r4b_go
// ChromosomeHuman represents the FHIR ValueSet as an enumeration
type ChromosomeHuman struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ChromosomeHuman_Value1 = "1" // chromosome 1: chromosome 1.
	ChromosomeHuman_Value2 = "2" // chromosome 2: chromosome 2.
	ChromosomeHuman_Value3 = "3" // chromosome 3: chromosome 3.
	ChromosomeHuman_Value4 = "4" // chromosome 4: chromosome 4.
	ChromosomeHuman_Value5 = "5" // chromosome 5: chromosome 5.
	ChromosomeHuman_Value6 = "6" // chromosome 6: chromosome 6.
	ChromosomeHuman_Value7 = "7" // chromosome 7: chromosome 7.
	ChromosomeHuman_Value8 = "8" // chromosome 8: chromosome 8.
	ChromosomeHuman_Value9 = "9" // chromosome 9: chromosome 9.
	ChromosomeHuman_Value10 = "10" // chromosome 10: chromosome 10.
	ChromosomeHuman_Value11 = "11" // chromosome 11: chromosome 11.
	ChromosomeHuman_Value12 = "12" // chromosome 12: chromosome 12.
	ChromosomeHuman_Value13 = "13" // chromosome 13: chromosome 13.
	ChromosomeHuman_Value14 = "14" // chromosome 14: chromosome 14.
	ChromosomeHuman_Value15 = "15" // chromosome 15: chromosome 15.
	ChromosomeHuman_Value16 = "16" // chromosome 16: chromosome 16.
	ChromosomeHuman_Value17 = "17" // chromosome 17: chromosome 17.
	ChromosomeHuman_Value18 = "18" // chromosome 18: chromosome 18.
	ChromosomeHuman_Value19 = "19" // chromosome 19: chromosome 19.
	ChromosomeHuman_Value20 = "20" // chromosome 20: chromosome 20.
	ChromosomeHuman_Value21 = "21" // chromosome 21: chromosome 21.
	ChromosomeHuman_Value22 = "22" // chromosome 22: chromosome 22.
	ChromosomeHuman_X = "X" // chromosome X: chromosome X.
	ChromosomeHuman_Y = "Y" // chromosome Y: chromosome Y.
)

// Clone creates a deep copy of the enum
func (e ChromosomeHuman) Clone() *ChromosomeHuman {
	return &ChromosomeHuman{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ChromosomeHuman) Equals(other *ChromosomeHuman) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

