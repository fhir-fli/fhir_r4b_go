// Code generated by FHIR Generator. DO NOT EDIT.
// The prescription supply types appropriate to a medicinal product
package fhir_r4b_go
// LegalStatusOfSupply represents the FHIR ValueSet as an enumeration
type LegalStatusOfSupply struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	LegalStatusOfSupply_Value100000072076 = "100000072076" // Medicinal product not subject to medical prescription: 
	LegalStatusOfSupply_Value100000072077 = "100000072077" // Medicinal product on medical prescription for renewable or non-renewable delivery: 
	LegalStatusOfSupply_Value100000072078 = "100000072078" // Medicinal product subject to restricted medical prescription: 
	LegalStatusOfSupply_Value100000072079 = "100000072079" // Medicinal product on medical prescription for non-renewable delivery: 
	LegalStatusOfSupply_Value100000072084 = "100000072084" // Medicinal product subject to medical prescription: 
	LegalStatusOfSupply_Value100000072085 = "100000072085" // Medicinal product subject to special medical prescription: 
	LegalStatusOfSupply_Value100000072086 = "100000072086" // Medicinal product on medical prescription for renewable delivery: 
	LegalStatusOfSupply_Value100000157313 = "100000157313" // Medicinal product subject to special and restricted medical prescription: 
)

// Clone creates a deep copy of the enum
func (e LegalStatusOfSupply) Clone() *LegalStatusOfSupply {
	return &LegalStatusOfSupply{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *LegalStatusOfSupply) Equals(other *LegalStatusOfSupply) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

