// Code generated by FHIR Generator. DO NOT EDIT.
// Provides examples of actions to be performed.
package fhir_r4b_go

// ActionCode represents the FHIR ValueSet as an enumeration
type ActionCode int

const (
	// Send a message: The action indicates that a particular message should be sent to a participant in the process.
	ActionCode_Send_message ActionCode = iota
	// Collect information: The action indicates that information should be collected from a participant in the process.
	ActionCode_Collect_information ActionCode = iota
	// Prescribe a medication: The action indicates that a particular medication should be prescribed to the patient.
	ActionCode_Prescribe_medication ActionCode = iota
	// Recommend an immunization: The action indicates that a particular immunization should be performed.
	ActionCode_Recommend_immunization ActionCode = iota
	// Order a service: The action indicates that a particular service should be provided.
	ActionCode_Order_service ActionCode = iota
	// Propose a diagnosis: The action indicates that a particular diagnosis should be proposed.
	ActionCode_Propose_diagnosis ActionCode = iota
	// Record a detected issue: The action indicates that a particular detected issue should be recorded.
	ActionCode_Record_detected_issue ActionCode = iota
	// Record an inference: The action indicates that a particular inference should be recorded.
	ActionCode_Record_inference ActionCode = iota
	// Report a flag: The action indicates that a particular flag should be reported.
	ActionCode_Report_flag ActionCode = iota
)

// String converts the enum to its string representation
func (e ActionCode) String() string {
	switch e {
	case ActionCode_Send_message: return "Send a message"
	case ActionCode_Collect_information: return "Collect information"
	case ActionCode_Prescribe_medication: return "Prescribe a medication"
	case ActionCode_Recommend_immunization: return "Recommend an immunization"
	case ActionCode_Order_service: return "Order a service"
	case ActionCode_Propose_diagnosis: return "Propose a diagnosis"
	case ActionCode_Record_detected_issue: return "Record a detected issue"
	case ActionCode_Record_inference: return "Record an inference"
	case ActionCode_Report_flag: return "Report a flag"
	default: return "Unknown"
	}
}

