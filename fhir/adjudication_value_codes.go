// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes a smattering of Adjudication Value codes which includes codes to indicate the amounts eligible under the plan, the amount of benefit, copays etc.
package fhir_r4b_go

// AdjudicationValueCodes represents the FHIR ValueSet as an enumeration
type AdjudicationValueCodes int

const (
	// Submitted Amount: The total submitted amount for the claim or group or line item.
	AdjudicationValueCodes_Submitted AdjudicationValueCodes = iota
	// CoPay: Patient Co-Payment
	AdjudicationValueCodes_Copay AdjudicationValueCodes = iota
	// Eligible Amount: Amount of the change which is considered for adjudication.
	AdjudicationValueCodes_Eligible AdjudicationValueCodes = iota
	// Deductible: Amount deducted from the eligible amount prior to adjudication.
	AdjudicationValueCodes_Deductible AdjudicationValueCodes = iota
	// Unallocated Deductible: The amount of deductible which could not allocated to other line items.
	AdjudicationValueCodes_Unallocdeduct AdjudicationValueCodes = iota
	// Eligible %: Eligible Percentage.
	AdjudicationValueCodes_Eligpercent AdjudicationValueCodes = iota
	// Tax: The amount of tax.
	AdjudicationValueCodes_Tax AdjudicationValueCodes = iota
	// Benefit Amount: Amount payable under the coverage
	AdjudicationValueCodes_Benefit AdjudicationValueCodes = iota
)

// String converts the enum to its string representation
func (e AdjudicationValueCodes) String() string {
	switch e {
	case AdjudicationValueCodes_Submitted: return "Submitted Amount"
	case AdjudicationValueCodes_Copay: return "CoPay"
	case AdjudicationValueCodes_Eligible: return "Eligible Amount"
	case AdjudicationValueCodes_Deductible: return "Deductible"
	case AdjudicationValueCodes_Unallocdeduct: return "Unallocated Deductible"
	case AdjudicationValueCodes_Eligpercent: return "Eligible %"
	case AdjudicationValueCodes_Tax: return "Tax"
	case AdjudicationValueCodes_Benefit: return "Benefit Amount"
	default: return "Unknown"
	}
}

