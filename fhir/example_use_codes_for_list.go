// Code generated by FHIR Generator. DO NOT EDIT.
// Example use codes for the List resource - typical kinds of use.
package fhir_r4b_go
// ExampleUseCodesForList represents the FHIR ValueSet as an enumeration
type ExampleUseCodesForList struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ExampleUseCodesForList_Alerts = "alerts" // Alerts: A list of alerts for the patient.
	ExampleUseCodesForList_Adverserxns = "adverserxns" // Adverse Reactions: A list of part adverse reactions.
	ExampleUseCodesForList_Allergies = "allergies" // Allergies: A list of Allergies for the patient.
	ExampleUseCodesForList_Medications = "medications" // Medication List: A list of medication statements for the patient.
	ExampleUseCodesForList_Problems = "problems" // Problem List: A list of problems that the patient is known of have (or have had in the past).
	ExampleUseCodesForList_Worklist = "worklist" // Worklist: A list of items that constitute a set of work to be performed (typically this code would be specialized for more specific uses, such as a ward round list).
	ExampleUseCodesForList_Waiting = "waiting" // Waiting List: A list of items waiting for an event (perhaps a surgical patient waiting list).
	ExampleUseCodesForList_Protocols = "protocols" // Protocols: A set of protocols to be followed.
	ExampleUseCodesForList_Plans = "plans" // Care Plans: A set of care plans that apply in a particular context of care.
)

// Clone creates a deep copy of the enum
func (e ExampleUseCodesForList) Clone() *ExampleUseCodesForList {
	return &ExampleUseCodesForList{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ExampleUseCodesForList) Equals(other *ExampleUseCodesForList) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

