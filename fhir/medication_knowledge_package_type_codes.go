// Code generated by FHIR Generator. DO NOT EDIT.
// MedicationKnowledge Package Type Codes
package fhir_r4b_go
// MedicationKnowledgePackageTypeCodes represents the FHIR ValueSet as an enumeration
type MedicationKnowledgePackageTypeCodes struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	MedicationKnowledgePackageTypeCodes_Amp = "amp" // Ampule: 
	MedicationKnowledgePackageTypeCodes_Bag = "bag" // Bag: 
	MedicationKnowledgePackageTypeCodes_Blstrpk = "blstrpk" // Blister Pack: 
	MedicationKnowledgePackageTypeCodes_Bot = "bot" // Bottle: 
	MedicationKnowledgePackageTypeCodes_Box = "box" // Box: 
	MedicationKnowledgePackageTypeCodes_Can = "can" // Can: 
	MedicationKnowledgePackageTypeCodes_Cart = "cart" // Cartridge: 
	MedicationKnowledgePackageTypeCodes_Disk = "disk" // Disk: 
	MedicationKnowledgePackageTypeCodes_Doset = "doset" // Dosette: 
	MedicationKnowledgePackageTypeCodes_Jar = "jar" // Jar: 
	MedicationKnowledgePackageTypeCodes_Jug = "jug" // Jug: 
	MedicationKnowledgePackageTypeCodes_Minim = "minim" // Minim: 
	MedicationKnowledgePackageTypeCodes_Nebamp = "nebamp" // Nebule Amp: 
	MedicationKnowledgePackageTypeCodes_Ovul = "ovul" // Ovule: 
	MedicationKnowledgePackageTypeCodes_Pch = "pch" // Pouch: 
	MedicationKnowledgePackageTypeCodes_Pkt = "pkt" // Packet: 
	MedicationKnowledgePackageTypeCodes_Sash = "sash" // Sashet: 
	MedicationKnowledgePackageTypeCodes_Strip = "strip" // Strip: 
	MedicationKnowledgePackageTypeCodes_Tin = "tin" // Tin: 
	MedicationKnowledgePackageTypeCodes_Tub = "tub" // Tub: 
	MedicationKnowledgePackageTypeCodes_Tube = "tube" // Tube: 
	MedicationKnowledgePackageTypeCodes_Vial = "vial" // Vial: 
)

// Clone creates a deep copy of the enum
func (e MedicationKnowledgePackageTypeCodes) Clone() *MedicationKnowledgePackageTypeCodes {
	return &MedicationKnowledgePackageTypeCodes{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *MedicationKnowledgePackageTypeCodes) Equals(other *MedicationKnowledgePackageTypeCodes) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

