// Code generated by FHIR Generator. DO NOT EDIT.
// Status of the supply request.
package fhir_r4b_go
// SupplyRequestStatus represents the FHIR ValueSet as an enumeration
type SupplyRequestStatus struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	SupplyRequestStatus_Draft = "draft" // Draft: The request has been created but is not yet complete or ready for action.
	SupplyRequestStatus_Active = "active" // Active: The request is ready to be acted upon.
	SupplyRequestStatus_Suspended = "suspended" // Suspended: The authorization/request to act has been temporarily withdrawn but is expected to resume in the future.
	SupplyRequestStatus_Cancelled = "cancelled" // Cancelled: The authorization/request to act has been terminated prior to the full completion of the intended actions. No further activity should occur.
	SupplyRequestStatus_Completed = "completed" // Completed: Activity against the request has been sufficiently completed to the satisfaction of the requester.
	SupplyRequestStatus_Entered_in_error = "entered-in-error" // Entered in Error: This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
	SupplyRequestStatus_Unknown = "unknown" // Unknown: The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
)

// Clone creates a deep copy of the enum
func (e SupplyRequestStatus) Clone() *SupplyRequestStatus {
	return &SupplyRequestStatus{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *SupplyRequestStatus) Equals(other *SupplyRequestStatus) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

