// Code generated by FHIR Generator. DO NOT EDIT.
// FHIR RESTful interaction codes used for SubscriptionTopic trigger.
package fhir_r4b_go

// InteractionTrigger represents the FHIR ValueSet as an enumeration
type InteractionTrigger int

const (
	// read: Read the current state of the resource.
	InteractionTrigger_Read InteractionTrigger = iota
	// vread: Read the state of a specific version of the resource.
	InteractionTrigger_Vread InteractionTrigger = iota
	// update: Update an existing resource by its id (or create it if it is new).
	InteractionTrigger_Update InteractionTrigger = iota
	// patch: Update an existing resource by posting a set of changes to it.
	InteractionTrigger_Patch InteractionTrigger = iota
	// delete: Delete a resource.
	InteractionTrigger_Delete InteractionTrigger = iota
	// history: Retrieve the change history for a particular resource, type of resource, or the entire system.
	InteractionTrigger_History InteractionTrigger = iota
	// history-instance: Retrieve the change history for a particular resource.
	InteractionTrigger_History_instance InteractionTrigger = iota
	// history-type: Retrieve the change history for all resources of a particular type.
	InteractionTrigger_History_type InteractionTrigger = iota
	// history-system: Retrieve the change history for all resources on a system.
	InteractionTrigger_History_system InteractionTrigger = iota
	// create: Create a new resource with a server assigned id.
	InteractionTrigger_Create InteractionTrigger = iota
	// search: Search a resource type or all resources based on some filter criteria.
	InteractionTrigger_Search InteractionTrigger = iota
	// search-type: Search all resources of the specified type based on some filter criteria.
	InteractionTrigger_Search_type InteractionTrigger = iota
	// search-system: Search all resources based on some filter criteria.
	InteractionTrigger_Search_system InteractionTrigger = iota
	// capabilities: Get a Capability Statement for the system.
	InteractionTrigger_Capabilities InteractionTrigger = iota
	// transaction: Update, create or delete a set of resources as a single transaction.
	InteractionTrigger_Transaction InteractionTrigger = iota
	// batch: perform a set of a separate interactions in a single http operation
	InteractionTrigger_Batch InteractionTrigger = iota
	// operation: Perform an operation as defined by an OperationDefinition.
	InteractionTrigger_Operation InteractionTrigger = iota
)

// String converts the enum to its string representation
func (e InteractionTrigger) String() string {
	switch e {
	case InteractionTrigger_Read: return "read"
	case InteractionTrigger_Vread: return "vread"
	case InteractionTrigger_Update: return "update"
	case InteractionTrigger_Patch: return "patch"
	case InteractionTrigger_Delete: return "delete"
	case InteractionTrigger_History: return "history"
	case InteractionTrigger_History_instance: return "history-instance"
	case InteractionTrigger_History_type: return "history-type"
	case InteractionTrigger_History_system: return "history-system"
	case InteractionTrigger_Create: return "create"
	case InteractionTrigger_Search: return "search"
	case InteractionTrigger_Search_type: return "search-type"
	case InteractionTrigger_Search_system: return "search-system"
	case InteractionTrigger_Capabilities: return "capabilities"
	case InteractionTrigger_Transaction: return "transaction"
	case InteractionTrigger_Batch: return "batch"
	case InteractionTrigger_Operation: return "operation"
	default: return "Unknown"
	}
}

