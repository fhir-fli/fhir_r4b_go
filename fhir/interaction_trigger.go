// Code generated by FHIR Generator. DO NOT EDIT.
// FHIR RESTful interaction codes used for SubscriptionTopic trigger.
package fhir_r4b_go
// InteractionTrigger represents the FHIR ValueSet as an enumeration
type InteractionTrigger struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	InteractionTrigger_Read = "read" // read: Read the current state of the resource.
	InteractionTrigger_Vread = "vread" // vread: Read the state of a specific version of the resource.
	InteractionTrigger_Update = "update" // update: Update an existing resource by its id (or create it if it is new).
	InteractionTrigger_Patch = "patch" // patch: Update an existing resource by posting a set of changes to it.
	InteractionTrigger_Delete = "delete" // delete: Delete a resource.
	InteractionTrigger_History = "history" // history: Retrieve the change history for a particular resource, type of resource, or the entire system.
	InteractionTrigger_History_instance = "history-instance" // history-instance: Retrieve the change history for a particular resource.
	InteractionTrigger_History_type = "history-type" // history-type: Retrieve the change history for all resources of a particular type.
	InteractionTrigger_History_system = "history-system" // history-system: Retrieve the change history for all resources on a system.
	InteractionTrigger_Create = "create" // create: Create a new resource with a server assigned id.
	InteractionTrigger_Search = "search" // search: Search a resource type or all resources based on some filter criteria.
	InteractionTrigger_Search_type = "search-type" // search-type: Search all resources of the specified type based on some filter criteria.
	InteractionTrigger_Search_system = "search-system" // search-system: Search all resources based on some filter criteria.
	InteractionTrigger_Capabilities = "capabilities" // capabilities: Get a Capability Statement for the system.
	InteractionTrigger_Transaction = "transaction" // transaction: Update, create or delete a set of resources as a single transaction.
	InteractionTrigger_Batch = "batch" // batch: perform a set of a separate interactions in a single http operation
	InteractionTrigger_Operation = "operation" // operation: Perform an operation as defined by an OperationDefinition.
)

// Clone creates a deep copy of the enum
func (e InteractionTrigger) Clone() *InteractionTrigger {
	return &InteractionTrigger{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *InteractionTrigger) Equals(other *InteractionTrigger) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

