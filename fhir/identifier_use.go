// Code generated by FHIR Generator. DO NOT EDIT.
// Identifies the purpose for this identifier, if known .
package fhir_r4b_go
// IdentifierUse represents the FHIR ValueSet as an enumeration
type IdentifierUse struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	IdentifierUse_Usual = "usual" // Usual: The identifier recommended for display and use in real-world interactions.
	IdentifierUse_Official = "official" // Official: The identifier considered to be most trusted for the identification of this item. Sometimes also known as "primary" and "main". The determination of "official" is subjective and implementation guides often provide additional guidelines for use.
	IdentifierUse_Temp = "temp" // Temp: A temporary identifier.
	IdentifierUse_Secondary = "secondary" // Secondary: An identifier that was assigned in secondary use - it serves to identify the object in a relative context, but cannot be consistently assigned to the same object again in a different context.
	IdentifierUse_Old = "old" // Old: The identifier id no longer considered valid, but may be relevant for search purposes. E.g. Changes to identifier schemes, account merges, etc.
)

// Clone creates a deep copy of the enum
func (e IdentifierUse) Clone() *IdentifierUse {
	return &IdentifierUse{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *IdentifierUse) Equals(other *IdentifierUse) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

