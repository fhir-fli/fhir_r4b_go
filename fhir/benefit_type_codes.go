// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes a smattering of Benefit type codes.
package fhir_r4b_go
// BenefitTypeCodes represents the FHIR ValueSet as an enumeration
type BenefitTypeCodes struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	BenefitTypeCodes_Benefit = "benefit" // Benefit: Maximum benefit allowable.
	BenefitTypeCodes_Deductible = "deductible" // Deductible: Cost to be incurred before benefits are applied
	BenefitTypeCodes_Visit = "visit" // Visit: Service visit
	BenefitTypeCodes_Room = "room" // Room: Type of room
	BenefitTypeCodes_Copay = "copay" // Copayment per service: Copayment per service
	BenefitTypeCodes_Copay_percent = "copay-percent" // Copayment Percent per service: Copayment percentage per service
	BenefitTypeCodes_Copay_maximum = "copay-maximum" // Copayment maximum per service: Copayment maximum per service
	BenefitTypeCodes_Vision_exam = "vision-exam" // Vision Exam: Vision Exam
	BenefitTypeCodes_Vision_glasses = "vision-glasses" // Vision Glasses: Frames and lenses
	BenefitTypeCodes_Vision_contacts = "vision-contacts" // Vision Contacts Coverage: Contact Lenses
	BenefitTypeCodes_Medical_primarycare = "medical-primarycare" // Medical Primary Health Coverage: Medical Primary Health Coverage
	BenefitTypeCodes_Pharmacy_dispense = "pharmacy-dispense" // Pharmacy Dispense Coverage: Pharmacy Dispense Coverage
)

// Clone creates a deep copy of the enum
func (e BenefitTypeCodes) Clone() *BenefitTypeCodes {
	return &BenefitTypeCodes{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *BenefitTypeCodes) Equals(other *BenefitTypeCodes) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

