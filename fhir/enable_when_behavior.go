// Code generated by FHIR Generator. DO NOT EDIT.
// Controls how multiple enableWhen values are interpreted - whether all or any must be true.
package fhir_r4b_go
// EnableWhenBehavior represents the FHIR ValueSet as an enumeration
type EnableWhenBehavior struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	EnableWhenBehavior_All = "all" // All: Enable the question when all the enableWhen criteria are satisfied.
	EnableWhenBehavior_Any = "any" // Any: Enable the question when any of the enableWhen criteria are satisfied.
)

// Clone creates a deep copy of the enum
func (e EnableWhenBehavior) Clone() *EnableWhenBehavior {
	return &EnableWhenBehavior{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *EnableWhenBehavior) Equals(other *EnableWhenBehavior) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

