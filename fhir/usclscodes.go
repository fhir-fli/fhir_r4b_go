// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes a smattering of USCLS codes.
package fhir_r4b_go
// USCLSCodes represents the FHIR ValueSet as an enumeration
type USCLSCodes struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	USCLSCodes_Value1101 = "1101" // Exam, comp, primary: Exam, comp, primary
	USCLSCodes_Value1102 = "1102" // Exam, comp, mixed: Exam, comp, mixed
	USCLSCodes_Value1103 = "1103" // Exam, comp, permanent: Exam, comp, permanent
	USCLSCodes_Value1201 = "1201" // Exam, recall: Exam, recall
	USCLSCodes_Value1205 = "1205" // Exam, emergency: Exam, emergency
	USCLSCodes_Value2101 = "2101" // Radiograph, series (12): Radiograph, series (12)
	USCLSCodes_Value2102 = "2102" // Radiograph, series (16): Radiograph, series (16)
	USCLSCodes_Value2141 = "2141" // Radiograph, bitewing: Radiograph, bitewing
	USCLSCodes_Value2601 = "2601" // Radiograph, panoramic: Radiograph, panoramic
	USCLSCodes_Value11101 = "11101" // Polishing, 1 unit: Polishing, 1 unit
	USCLSCodes_Value11102 = "11102" // Polishing, 2 unit: Polishing, 2 unit
	USCLSCodes_Value11103 = "11103" // Polishing, 3 unit: Polishing, 3 unit
	USCLSCodes_Value11104 = "11104" // Polishing, 4 unit: Polishing, 4 unit
	USCLSCodes_Value21211 = "21211" // Amalgam, 1 surface: Amalgam, 1 surface
	USCLSCodes_Value21212 = "21212" // Amalgam, 2 surface: Amalgam, 2 surface
	USCLSCodes_Value27211 = "27211" // Crown, PFM: Crown, PFM
	USCLSCodes_Value67211 = "67211" // Maryland Bridge: Maryland Bridge
	USCLSCodes_Value99111 = "99111" // Lab, commercial: Lab, commercial
	USCLSCodes_Value99333 = "99333" // Lab, in office: Lab, in office
	USCLSCodes_Value99555 = "99555" // Expense: Expense
)

// Clone creates a deep copy of the enum
func (e USCLSCodes) Clone() *USCLSCodes {
	return &USCLSCodes{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *USCLSCodes) Equals(other *USCLSCodes) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

