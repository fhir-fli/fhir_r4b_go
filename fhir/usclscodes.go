// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes a smattering of USCLS codes.
package fhir_r4b_go

// USCLSCodes represents the FHIR ValueSet as an enumeration
type USCLSCodes int

const (
	// Exam, comp, primary: Exam, comp, primary
	USCLSCodes_Value1101 USCLSCodes = iota
	// Exam, comp, mixed: Exam, comp, mixed
	USCLSCodes_Value1102 USCLSCodes = iota
	// Exam, comp, permanent: Exam, comp, permanent
	USCLSCodes_Value1103 USCLSCodes = iota
	// Exam, recall: Exam, recall
	USCLSCodes_Value1201 USCLSCodes = iota
	// Exam, emergency: Exam, emergency
	USCLSCodes_Value1205 USCLSCodes = iota
	// Radiograph, series (12): Radiograph, series (12)
	USCLSCodes_Value2101 USCLSCodes = iota
	// Radiograph, series (16): Radiograph, series (16)
	USCLSCodes_Value2102 USCLSCodes = iota
	// Radiograph, bitewing: Radiograph, bitewing
	USCLSCodes_Value2141 USCLSCodes = iota
	// Radiograph, panoramic: Radiograph, panoramic
	USCLSCodes_Value2601 USCLSCodes = iota
	// Polishing, 1 unit: Polishing, 1 unit
	USCLSCodes_Value11101 USCLSCodes = iota
	// Polishing, 2 unit: Polishing, 2 unit
	USCLSCodes_Value11102 USCLSCodes = iota
	// Polishing, 3 unit: Polishing, 3 unit
	USCLSCodes_Value11103 USCLSCodes = iota
	// Polishing, 4 unit: Polishing, 4 unit
	USCLSCodes_Value11104 USCLSCodes = iota
	// Amalgam, 1 surface: Amalgam, 1 surface
	USCLSCodes_Value21211 USCLSCodes = iota
	// Amalgam, 2 surface: Amalgam, 2 surface
	USCLSCodes_Value21212 USCLSCodes = iota
	// Crown, PFM: Crown, PFM
	USCLSCodes_Value27211 USCLSCodes = iota
	// Maryland Bridge: Maryland Bridge
	USCLSCodes_Value67211 USCLSCodes = iota
	// Lab, commercial: Lab, commercial
	USCLSCodes_Value99111 USCLSCodes = iota
	// Lab, in office: Lab, in office
	USCLSCodes_Value99333 USCLSCodes = iota
	// Expense: Expense
	USCLSCodes_Value99555 USCLSCodes = iota
)

// String converts the enum to its string representation
func (e USCLSCodes) String() string {
	switch e {
	case USCLSCodes_Value1101: return "Exam, comp, primary"
	case USCLSCodes_Value1102: return "Exam, comp, mixed"
	case USCLSCodes_Value1103: return "Exam, comp, permanent"
	case USCLSCodes_Value1201: return "Exam, recall"
	case USCLSCodes_Value1205: return "Exam, emergency"
	case USCLSCodes_Value2101: return "Radiograph, series (12)"
	case USCLSCodes_Value2102: return "Radiograph, series (16)"
	case USCLSCodes_Value2141: return "Radiograph, bitewing"
	case USCLSCodes_Value2601: return "Radiograph, panoramic"
	case USCLSCodes_Value11101: return "Polishing, 1 unit"
	case USCLSCodes_Value11102: return "Polishing, 2 unit"
	case USCLSCodes_Value11103: return "Polishing, 3 unit"
	case USCLSCodes_Value11104: return "Polishing, 4 unit"
	case USCLSCodes_Value21211: return "Amalgam, 1 surface"
	case USCLSCodes_Value21212: return "Amalgam, 2 surface"
	case USCLSCodes_Value27211: return "Crown, PFM"
	case USCLSCodes_Value67211: return "Maryland Bridge"
	case USCLSCodes_Value99111: return "Lab, commercial"
	case USCLSCodes_Value99333: return "Lab, in office"
	case USCLSCodes_Value99555: return "Expense"
	default: return "Unknown"
	}
}

