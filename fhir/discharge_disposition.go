// Code generated by FHIR Generator. DO NOT EDIT.
// This value set defines a set of codes that can be used to where the patient left the hospital.
package fhir_r4b_go
// DischargeDisposition represents the FHIR ValueSet as an enumeration
type DischargeDisposition struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	DischargeDisposition_Home = "home" // Home: The patient was dicharged and has indicated that they are going to return home afterwards.
	DischargeDisposition_Alt_home = "alt-home" // Alternative home: The patient was discharged and has indicated that they are going to return home afterwards, but not the patient's home - e.g. a family member's home.
	DischargeDisposition_Other_hcf = "other-hcf" // Other healthcare facility: The patient was transferred to another healthcare facility.
	DischargeDisposition_Hosp = "hosp" // Hospice: The patient has been discharged into palliative care.
	DischargeDisposition_Long = "long" // Long-term care: The patient has been discharged into long-term care where is likely to be monitored through an ongoing episode-of-care.
	DischargeDisposition_Aadvice = "aadvice" // Left against advice: The patient self discharged against medical advice.
	DischargeDisposition_Exp = "exp" // Expired: The patient has deceased during this encounter.
	DischargeDisposition_Psy = "psy" // Psychiatric hospital: The patient has been transferred to a psychiatric facility.
	DischargeDisposition_Rehab = "rehab" // Rehabilitation: The patient was discharged and is to receive post acute care rehabilitation services.
	DischargeDisposition_Snf = "snf" // Skilled nursing facility: The patient has been discharged to a skilled nursing facility for the patient to receive additional care.
	DischargeDisposition_Oth = "oth" // Other: The discharge disposition has not otherwise defined.
)

// Clone creates a deep copy of the enum
func (e DischargeDisposition) Clone() *DischargeDisposition {
	return &DischargeDisposition{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *DischargeDisposition) Equals(other *DischargeDisposition) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

