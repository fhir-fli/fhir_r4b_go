// Code generated by FHIR Generator. DO NOT EDIT.
// The assessment of quality, confidence, or certainty.
package fhir_r4b_go
// EvidenceCertaintyRating represents the FHIR ValueSet as an enumeration
type EvidenceCertaintyRating struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	EvidenceCertaintyRating_High = "high" // High quality: High quality evidence.
	EvidenceCertaintyRating_Moderate = "moderate" // Moderate quality: Moderate quality evidence.
	EvidenceCertaintyRating_Low = "low" // Low quality: Low quality evidence.
	EvidenceCertaintyRating_Very_low = "very-low" // Very low quality: Very low quality evidence.
	EvidenceCertaintyRating_No_concern = "no-concern" // no serious concern: no serious concern.
	EvidenceCertaintyRating_Serious_concern = "serious-concern" // serious concern: serious concern.
	EvidenceCertaintyRating_Very_serious_concern = "very-serious-concern" // very serious concern: very serious concern.
	EvidenceCertaintyRating_Extremely_serious_concern = "extremely-serious-concern" // extremely serious concern: extremely serious concern.
	EvidenceCertaintyRating_Present = "present" // present: possible reason for increasing quality rating was checked and found to be present.
	EvidenceCertaintyRating_Absent = "absent" // absent: possible reason for increasing quality rating was checked and found to be absent.
	EvidenceCertaintyRating_No_change = "no-change" // no change to rating: no change to quality rating.
	EvidenceCertaintyRating_Downcode1 = "downcode1" // reduce rating: -1: reduce quality rating by 1.
	EvidenceCertaintyRating_Downcode2 = "downcode2" // reduce rating: -2: reduce quality rating by 2.
	EvidenceCertaintyRating_Downcode3 = "downcode3" // reduce rating: -3: reduce quality rating by 3.
	EvidenceCertaintyRating_Upcode1 = "upcode1" // increase rating: +1: increase quality rating by 1.
	EvidenceCertaintyRating_Upcode2 = "upcode2" // increase rating: +2: increase quality rating by 2.
)

// Clone creates a deep copy of the enum
func (e EvidenceCertaintyRating) Clone() *EvidenceCertaintyRating {
	return &EvidenceCertaintyRating{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *EvidenceCertaintyRating) Equals(other *EvidenceCertaintyRating) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

