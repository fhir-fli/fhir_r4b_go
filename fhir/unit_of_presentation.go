// Code generated by FHIR Generator. DO NOT EDIT.
// The presentation type in which an administrable medicinal product is given to a patient.
package fhir_r4b_go
// UnitOfPresentation represents the FHIR ValueSet as an enumeration
type UnitOfPresentation struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	UnitOfPresentation_Value200000002108 = "200000002108" // Barrel: 
	UnitOfPresentation_Value200000002109 = "200000002109" // Blister: 
	UnitOfPresentation_Value200000002110 = "200000002110" // Block: 
	UnitOfPresentation_Value200000002111 = "200000002111" // Bottle: 
	UnitOfPresentation_Value200000002112 = "200000002112" // Cachet: 
	UnitOfPresentation_Value200000002113 = "200000002113" // Capsule: 
	UnitOfPresentation_Value200000002114 = "200000002114" // Cartridge: 
	UnitOfPresentation_Value200000002115 = "200000002115" // Collar: 
	UnitOfPresentation_Value200000002116 = "200000002116" // Container: 
	UnitOfPresentation_Value200000002117 = "200000002117" // Cup: 
	UnitOfPresentation_Value200000002118 = "200000002118" // Cylinder: 
	UnitOfPresentation_Value200000002119 = "200000002119" // Dart: 
	UnitOfPresentation_Value200000002120 = "200000002120" // Dressing: 
	UnitOfPresentation_Value200000002121 = "200000002121" // Drop: 
	UnitOfPresentation_Value200000002122 = "200000002122" // Film: 
	UnitOfPresentation_Value200000002123 = "200000002123" // Chewing gum: 
	UnitOfPresentation_Value200000002124 = "200000002124" // Implant: 
	UnitOfPresentation_Value200000002125 = "200000002125" // Inhaler: 
	UnitOfPresentation_Value200000002126 = "200000002126" // Insert: 
	UnitOfPresentation_Value200000002127 = "200000002127" // Jar: 
	UnitOfPresentation_Value200000002128 = "200000002128" // Lozenge: 
	UnitOfPresentation_Value200000002129 = "200000002129" // Lyophilisate: 
	UnitOfPresentation_Value200000002130 = "200000002130" // Matrix: 
	UnitOfPresentation_Value200000002131 = "200000002131" // Pad: 
	UnitOfPresentation_Value200000002132 = "200000002132" // Paper: 
	UnitOfPresentation_Value200000002133 = "200000002133" // Pastille: 
	UnitOfPresentation_Value200000002134 = "200000002134" // Patch: 
	UnitOfPresentation_Value200000002135 = "200000002135" // Pen: 
	UnitOfPresentation_Value200000002136 = "200000002136" // Pendant: 
	UnitOfPresentation_Value200000002137 = "200000002137" // Pessary: 
	UnitOfPresentation_Value200000002138 = "200000002138" // Pillule: 
	UnitOfPresentation_Value200000002139 = "200000002139" // Pipette: 
	UnitOfPresentation_Value200000002140 = "200000002140" // Plaster: 
	UnitOfPresentation_Value200000002141 = "200000002141" // Plug: 
	UnitOfPresentation_Value200000002142 = "200000002142" // Pouch: 
	UnitOfPresentation_Value200000002143 = "200000002143" // Sachet: 
	UnitOfPresentation_Value200000002144 = "200000002144" // Sponge: 
	UnitOfPresentation_Value200000002145 = "200000002145" // Spoonful: 
	UnitOfPresentation_Value200000002146 = "200000002146" // Stick: 
	UnitOfPresentation_Value200000002147 = "200000002147" // Straw: 
	UnitOfPresentation_Value200000002148 = "200000002148" // Strip: 
	UnitOfPresentation_Value200000002149 = "200000002149" // Suppository: 
	UnitOfPresentation_Value200000002150 = "200000002150" // Syringe: 
	UnitOfPresentation_Value200000002151 = "200000002151" // System: 
	UnitOfPresentation_Value200000002152 = "200000002152" // Tablet: 
	UnitOfPresentation_Value200000002153 = "200000002153" // Tag: 
	UnitOfPresentation_Value200000002154 = "200000002154" // Tampon: 
	UnitOfPresentation_Value200000002155 = "200000002155" // Thread: 
	UnitOfPresentation_Value200000002156 = "200000002156" // Tube: 
	UnitOfPresentation_Value200000002157 = "200000002157" // Vessel: 
	UnitOfPresentation_Value200000002158 = "200000002158" // Vial: 
	UnitOfPresentation_Value200000002159 = "200000002159" // Puff: 
	UnitOfPresentation_Value200000002163 = "200000002163" // Actuation: 
	UnitOfPresentation_Value200000002164 = "200000002164" // Ampoule: 
	UnitOfPresentation_Value200000002165 = "200000002165" // Applicator: 
	UnitOfPresentation_Value200000002166 = "200000002166" // Bag: 
)

// Clone creates a deep copy of the enum
func (e UnitOfPresentation) Clone() *UnitOfPresentation {
	return &UnitOfPresentation{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *UnitOfPresentation) Equals(other *UnitOfPresentation) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

