// Code generated by FHIR Generator. DO NOT EDIT.
// The type of participation a provenance participant.
package fhir_r4b_go

// ProvenanceParticipantType represents the FHIR ValueSet as an enumeration
type ProvenanceParticipantType int

const (
	// Enterer: A person entering the data into the originating system
	ProvenanceParticipantType_Enterer ProvenanceParticipantType = iota
	// Performer: A person, animal, organization or device that who actually and principally carries out the activity
	ProvenanceParticipantType_Performer ProvenanceParticipantType = iota
	// Author: A party that originates the resource and therefore has responsibility for the information given in the resource and ownership of this resource
	ProvenanceParticipantType_Author ProvenanceParticipantType = iota
	// Verifier: A person who verifies the correctness and appropriateness of activity
	ProvenanceParticipantType_Verifier ProvenanceParticipantType = iota
	// Legal Authenticator: The person authenticated the content and accepted legal responsibility for its content
	ProvenanceParticipantType_Legal ProvenanceParticipantType = iota
	// Attester: A verifier who attests to the accuracy of the resource
	ProvenanceParticipantType_Attester ProvenanceParticipantType = iota
	// Informant: A person who reported information that contributed to the resource
	ProvenanceParticipantType_Informant ProvenanceParticipantType = iota
	// Custodian: The entity that is accountable for maintaining a true an accurate copy of the original record
	ProvenanceParticipantType_Custodian ProvenanceParticipantType = iota
	// Assembler: A device that operates independently of an author on custodian's algorithms for data extraction of existing information for purpose of generating a new artifact.
	ProvenanceParticipantType_Assembler ProvenanceParticipantType = iota
	// Composer: A device used by an author to record new information, which may also be used by the author to select existing information for aggregation with newly recorded information for the purpose of generating a new artifact.
	ProvenanceParticipantType_Composer ProvenanceParticipantType = iota
)

// String converts the enum to its string representation
func (e ProvenanceParticipantType) String() string {
	switch e {
	case ProvenanceParticipantType_Enterer: return "Enterer"
	case ProvenanceParticipantType_Performer: return "Performer"
	case ProvenanceParticipantType_Author: return "Author"
	case ProvenanceParticipantType_Verifier: return "Verifier"
	case ProvenanceParticipantType_Legal: return "Legal Authenticator"
	case ProvenanceParticipantType_Attester: return "Attester"
	case ProvenanceParticipantType_Informant: return "Informant"
	case ProvenanceParticipantType_Custodian: return "Custodian"
	case ProvenanceParticipantType_Assembler: return "Assembler"
	case ProvenanceParticipantType_Composer: return "Composer"
	default: return "Unknown"
	}
}

