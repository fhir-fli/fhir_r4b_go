// Code generated by FHIR Generator. DO NOT EDIT.
// The type of notification represented by the status message.
package fhir_r4b_go

// SubscriptionNotificationType represents the FHIR ValueSet as an enumeration
type SubscriptionNotificationType int

const (
	// Handshake: The status was generated as part of the setup or verification of a communications channel.
	SubscriptionNotificationType_Handshake SubscriptionNotificationType = iota
	// Heartbeat: The status was generated to perform a heartbeat notification to the subscriber.
	SubscriptionNotificationType_Heartbeat SubscriptionNotificationType = iota
	// Event Notification: The status was generated for an event to the subscriber.
	SubscriptionNotificationType_Event_notification SubscriptionNotificationType = iota
	// Query Status: The status was generated in response to a status query/request.
	SubscriptionNotificationType_Query_status SubscriptionNotificationType = iota
	// Query Event: The status was generated in response to an event query/request.
	SubscriptionNotificationType_Query_event SubscriptionNotificationType = iota
)

// String converts the enum to its string representation
func (e SubscriptionNotificationType) String() string {
	switch e {
	case SubscriptionNotificationType_Handshake: return "Handshake"
	case SubscriptionNotificationType_Heartbeat: return "Heartbeat"
	case SubscriptionNotificationType_Event_notification: return "Event Notification"
	case SubscriptionNotificationType_Query_status: return "Query Status"
	case SubscriptionNotificationType_Query_event: return "Query Event"
	default: return "Unknown"
	}
}

