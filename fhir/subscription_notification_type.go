// Code generated by FHIR Generator. DO NOT EDIT.
// The type of notification represented by the status message.
package fhir_r4b_go
// SubscriptionNotificationType represents the FHIR ValueSet as an enumeration
type SubscriptionNotificationType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	SubscriptionNotificationType_Handshake = "handshake" // Handshake: The status was generated as part of the setup or verification of a communications channel.
	SubscriptionNotificationType_Heartbeat = "heartbeat" // Heartbeat: The status was generated to perform a heartbeat notification to the subscriber.
	SubscriptionNotificationType_Event_notification = "event-notification" // Event Notification: The status was generated for an event to the subscriber.
	SubscriptionNotificationType_Query_status = "query-status" // Query Status: The status was generated in response to a status query/request.
	SubscriptionNotificationType_Query_event = "query-event" // Query Event: The status was generated in response to an event query/request.
)

// Clone creates a deep copy of the enum
func (e SubscriptionNotificationType) Clone() *SubscriptionNotificationType {
	return &SubscriptionNotificationType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *SubscriptionNotificationType) Equals(other *SubscriptionNotificationType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

