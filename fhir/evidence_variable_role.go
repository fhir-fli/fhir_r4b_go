// Code generated by FHIR Generator. DO NOT EDIT.
// The role that the assertion variable plays.
package fhir_r4b_go

// EvidenceVariableRole represents the FHIR ValueSet as an enumeration
type EvidenceVariableRole int

const (
	// population: variable represents a population.
	EvidenceVariableRole_Population EvidenceVariableRole = iota
	// subpopulation: variable represents a subpopulation.
	EvidenceVariableRole_Subpopulation EvidenceVariableRole = iota
	// exposure: variable represents an exposure.
	EvidenceVariableRole_Exposure EvidenceVariableRole = iota
	// reference exposure: variable represents a reference exposure.
	EvidenceVariableRole_ReferenceExposure EvidenceVariableRole = iota
	// measured variable: variable represents a measured variable.
	EvidenceVariableRole_MeasuredVariable EvidenceVariableRole = iota
	// confounder: variable represents a confounder.
	EvidenceVariableRole_Confounder EvidenceVariableRole = iota
)

// String converts the enum to its string representation
func (e EvidenceVariableRole) String() string {
	switch e {
	case EvidenceVariableRole_Population: return "population"
	case EvidenceVariableRole_Subpopulation: return "subpopulation"
	case EvidenceVariableRole_Exposure: return "exposure"
	case EvidenceVariableRole_ReferenceExposure: return "reference exposure"
	case EvidenceVariableRole_MeasuredVariable: return "measured variable"
	case EvidenceVariableRole_Confounder: return "confounder"
	default: return "Unknown"
	}
}

