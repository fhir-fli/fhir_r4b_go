// Code generated by FHIR Generator. DO NOT EDIT.
// The free/busy status of an appointment.
package fhir_r4b_go

// AppointmentStatus represents the FHIR ValueSet as an enumeration
type AppointmentStatus int

const (
	// Proposed: None of the participant(s) have finalized their acceptance of the appointment request, and the start/end time might not be set yet.
	AppointmentStatus_Proposed AppointmentStatus = iota
	// Pending: Some or all of the participant(s) have not finalized their acceptance of the appointment request.
	AppointmentStatus_Pending AppointmentStatus = iota
	// Booked: All participant(s) have been considered and the appointment is confirmed to go ahead at the date/times specified.
	AppointmentStatus_Booked AppointmentStatus = iota
	// Arrived: The patient/patients has/have arrived and is/are waiting to be seen.
	AppointmentStatus_Arrived AppointmentStatus = iota
	// Fulfilled: The planning stages of the appointment are now complete, the encounter resource will exist and will track further status changes. Note that an encounter may exist before the appointment status is fulfilled for many reasons.
	AppointmentStatus_Fulfilled AppointmentStatus = iota
	// Cancelled: The appointment has been cancelled.
	AppointmentStatus_Cancelled AppointmentStatus = iota
	// No Show: Some or all of the participant(s) have not/did not appear for the appointment (usually the patient).
	AppointmentStatus_Noshow AppointmentStatus = iota
	// Entered in error: This instance should not have been part of this patient's medical record.
	AppointmentStatus_Entered_in_error AppointmentStatus = iota
	// Checked In: When checked in, all pre-encounter administrative work is complete, and the encounter may begin. (where multiple patients are involved, they are all present).
	AppointmentStatus_Checked_in AppointmentStatus = iota
	// Waitlisted: The appointment has been placed on a waitlist, to be scheduled/confirmed in the future when a slot/service is available. A specific time might or might not be pre-allocated.
	AppointmentStatus_Waitlist AppointmentStatus = iota
)

// String converts the enum to its string representation
func (e AppointmentStatus) String() string {
	switch e {
	case AppointmentStatus_Proposed: return "Proposed"
	case AppointmentStatus_Pending: return "Pending"
	case AppointmentStatus_Booked: return "Booked"
	case AppointmentStatus_Arrived: return "Arrived"
	case AppointmentStatus_Fulfilled: return "Fulfilled"
	case AppointmentStatus_Cancelled: return "Cancelled"
	case AppointmentStatus_Noshow: return "No Show"
	case AppointmentStatus_Entered_in_error: return "Entered in error"
	case AppointmentStatus_Checked_in: return "Checked In"
	case AppointmentStatus_Waitlist: return "Waitlisted"
	default: return "Unknown"
	}
}

