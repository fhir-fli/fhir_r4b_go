// Code generated by FHIR Generator. DO NOT EDIT.
// Codes indicating the type of action that is expected to be performed
package fhir_r4b_go
// TaskCode represents the FHIR ValueSet as an enumeration
type TaskCode struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	TaskCode_Approve = "approve" // Activate/approve the focal resource: Take what actions are needed to transition the focus resource from 'draft' to 'active' or 'in-progress', as appropriate for the resource type. This may involve additing additional content, approval, validation, etc.
	TaskCode_Fulfill = "fulfill" // Fulfill the focal request: Act to perform the actions defined in the focus request. This might result in a 'more assertive' request (order for a plan or proposal, filler order for a placer order), but is intend to eventually result in events. The degree of fulfillment requested might be limited by Task.restriction.
	TaskCode_Abort = "abort" // Mark the focal resource as no longer active: Abort, cancel or withdraw the focal resource, as appropriate for the type of resource.
	TaskCode_Replace = "replace" // Replace the focal resource with the input resource: Replace the focal resource with the specified input resource
	TaskCode_Change = "change" // Change the focal resource: Update the focal resource of the owning system to reflect the content specified as the Task.focus
	TaskCode_Suspend = "suspend" // Suspend the focal resource: Transition the focal resource from 'active' or 'in-progress' to 'suspended'
	TaskCode_Resume = "resume" // Re-activate the focal resource: Transition the focal resource from 'suspended' to 'active' or 'in-progress' as appropriate for the resource type.
)

// Clone creates a deep copy of the enum
func (e TaskCode) Clone() *TaskCode {
	return &TaskCode{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *TaskCode) Equals(other *TaskCode) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

