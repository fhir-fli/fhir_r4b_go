// Code generated by FHIR Generator. DO NOT EDIT.
// This value set includes sample Information Category codes.
package fhir_r4b_go

// ClaimInformationCategoryCodes represents the FHIR ValueSet as an enumeration
type ClaimInformationCategoryCodes int

const (
	// Information: Codes conveying additional situation and condition information.
	ClaimInformationCategoryCodes_Info ClaimInformationCategoryCodes = iota
	// Discharge: Discharge status and discharge to locations.
	ClaimInformationCategoryCodes_Discharge ClaimInformationCategoryCodes = iota
	// Onset: Period, start or end dates of aspects of the Condition.
	ClaimInformationCategoryCodes_Onset ClaimInformationCategoryCodes = iota
	// Related Services: Nature and date of the related event e.g. Last exam, service, X-ray etc.
	ClaimInformationCategoryCodes_Related ClaimInformationCategoryCodes = iota
	// Exception: Insurance policy exceptions.
	ClaimInformationCategoryCodes_Exception ClaimInformationCategoryCodes = iota
	// Materials Forwarded: Materials being forwarded, e.g. Models, molds, images, documents.
	ClaimInformationCategoryCodes_Material ClaimInformationCategoryCodes = iota
	// Attachment: Materials attached such as images, documents and resources.
	ClaimInformationCategoryCodes_Attachment ClaimInformationCategoryCodes = iota
	// Missing Tooth: Teeth which are missing for any reason, for example: prior extraction, never developed.
	ClaimInformationCategoryCodes_Missingtooth ClaimInformationCategoryCodes = iota
	// Prosthesis: The type of prosthesis and date of supply if a previously supplied prosthesis.
	ClaimInformationCategoryCodes_Prosthesis ClaimInformationCategoryCodes = iota
	// Other: Other information identified by the type.system.
	ClaimInformationCategoryCodes_Other ClaimInformationCategoryCodes = iota
	// Hospitalized: An indication that the patient was hospitalized, the period if known otherwise a Yes/No (boolean).
	ClaimInformationCategoryCodes_Hospitalized ClaimInformationCategoryCodes = iota
	// EmploymentImpacted: An indication that the patient was unable to work, the period if known otherwise a Yes/No (boolean).
	ClaimInformationCategoryCodes_Employmentimpacted ClaimInformationCategoryCodes = iota
	// External Caause: The external cause of an illness or injury.
	ClaimInformationCategoryCodes_Externalcause ClaimInformationCategoryCodes = iota
	// Patient Reason for Visit: The reason for the patient visit.
	ClaimInformationCategoryCodes_Patientreasonforvisit ClaimInformationCategoryCodes = iota
)

// String converts the enum to its string representation
func (e ClaimInformationCategoryCodes) String() string {
	switch e {
	case ClaimInformationCategoryCodes_Info: return "Information"
	case ClaimInformationCategoryCodes_Discharge: return "Discharge"
	case ClaimInformationCategoryCodes_Onset: return "Onset"
	case ClaimInformationCategoryCodes_Related: return "Related Services"
	case ClaimInformationCategoryCodes_Exception: return "Exception"
	case ClaimInformationCategoryCodes_Material: return "Materials Forwarded"
	case ClaimInformationCategoryCodes_Attachment: return "Attachment"
	case ClaimInformationCategoryCodes_Missingtooth: return "Missing Tooth"
	case ClaimInformationCategoryCodes_Prosthesis: return "Prosthesis"
	case ClaimInformationCategoryCodes_Other: return "Other"
	case ClaimInformationCategoryCodes_Hospitalized: return "Hospitalized"
	case ClaimInformationCategoryCodes_Employmentimpacted: return "EmploymentImpacted"
	case ClaimInformationCategoryCodes_Externalcause: return "External Caause"
	case ClaimInformationCategoryCodes_Patientreasonforvisit: return "Patient Reason for Visit"
	default: return "Unknown"
	}
}

