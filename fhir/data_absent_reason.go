// Code generated by FHIR Generator. DO NOT EDIT.
// Used to specify why the normally expected content of the data element is missing.
package fhir_r4b_go
// DataAbsentReason represents the FHIR ValueSet as an enumeration
type DataAbsentReason struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	DataAbsentReason_Unknown = "unknown" // Unknown: The value is expected to exist but is not known.
	DataAbsentReason_Asked_unknown = "asked-unknown" // Asked But Unknown: The source was asked but does not know the value.
	DataAbsentReason_Temp_unknown = "temp-unknown" // Temporarily Unknown: There is reason to expect (from the workflow) that the value may become known.
	DataAbsentReason_Not_asked = "not-asked" // Not Asked: The workflow didn't lead to this value being known.
	DataAbsentReason_Asked_declined = "asked-declined" // Asked But Declined: The source was asked but declined to answer.
	DataAbsentReason_Masked = "masked" // Masked: The information is not available due to security, privacy or related reasons.
	DataAbsentReason_Not_applicable = "not-applicable" // Not Applicable: There is no proper value for this element (e.g. last menstrual period for a male).
	DataAbsentReason_Unsupported = "unsupported" // Unsupported: The source system wasn't capable of supporting this element.
	DataAbsentReason_As_text = "as-text" // As Text: The content of the data is represented in the resource narrative.
	DataAbsentReason_Error = "error" // Error: Some system or workflow process error means that the information is not available.
	DataAbsentReason_Not_a_number = "not-a-number" // Not a Number (NaN): The numeric value is undefined or unrepresentable due to a floating point processing error.
	DataAbsentReason_Negative_infinity = "negative-infinity" // Negative Infinity (NINF): The numeric value is excessively low and unrepresentable due to a floating point processing error.
	DataAbsentReason_Positive_infinity = "positive-infinity" // Positive Infinity (PINF): The numeric value is excessively high and unrepresentable due to a floating point processing error.
	DataAbsentReason_Not_performed = "not-performed" // Not Performed: The value is not available because the observation procedure (test, etc.) was not performed.
	DataAbsentReason_Not_permitted = "not-permitted" // Not Permitted: The value is not permitted in this context (e.g. due to profiles, or the base data types).
)

// Clone creates a deep copy of the enum
func (e DataAbsentReason) Clone() *DataAbsentReason {
	return &DataAbsentReason{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *DataAbsentReason) Equals(other *DataAbsentReason) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

