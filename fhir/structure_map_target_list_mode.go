// Code generated by FHIR Generator. DO NOT EDIT.
// If field is a list, how to manage the production.
package fhir_r4b_go
// StructureMapTargetListMode represents the FHIR ValueSet as an enumeration
type StructureMapTargetListMode struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	StructureMapTargetListMode_First = "first" // First: when the target list is being assembled, the items for this rule go first. If more than one rule defines a first item (for a given instance of mapping) then this is an error.
	StructureMapTargetListMode_Share = "share" // Share: the target instance is shared with the target instances generated by another rule (up to the first common n items, then create new ones).
	StructureMapTargetListMode_Last = "last" // Last: when the target list is being assembled, the items for this rule go last. If more than one rule defines a last item (for a given instance of mapping) then this is an error.
	StructureMapTargetListMode_Collate = "collate" // Collate: re-use the first item in the list, and keep adding content to it.
)

// Clone creates a deep copy of the enum
func (e StructureMapTargetListMode) Clone() *StructureMapTargetListMode {
	return &StructureMapTargetListMode{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *StructureMapTargetListMode) Equals(other *StructureMapTargetListMode) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

