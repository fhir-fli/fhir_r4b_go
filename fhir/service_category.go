// Code generated by FHIR Generator. DO NOT EDIT.
// This value set defines an example set of codes that can be used to classify groupings of service-types/specialties.
package fhir_r4b_go
// ServiceCategory represents the FHIR ValueSet as an enumeration
type ServiceCategory struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ServiceCategory_Value1 = "1" // Adoption: Adoption
	ServiceCategory_Value2 = "2" // Aged Care: Aged Care
	ServiceCategory_Value34 = "34" // Allied Health: Allied Health
	ServiceCategory_Value3 = "3" // Alternative/Complementary Therapies: Alternative & Complementary Therapies
	ServiceCategory_Value4 = "4" // Child Care /Kindergarten: Child Care and/or Kindergarten
	ServiceCategory_Value5 = "5" // Child Development: Child Development
	ServiceCategory_Value6 = "6" // Child Protection & Family Services: Child Protection & Family Services
	ServiceCategory_Value7 = "7" // Community Health Care: Community Health Care
	ServiceCategory_Value8 = "8" // Counselling: Counselling
	ServiceCategory_Value36 = "36" // Crisis Line (GPAH use only): Crisis Line (GPAH use only)
	ServiceCategory_Value9 = "9" // Death Services: Death Services
	ServiceCategory_Value10 = "10" // Dental: Dental
	ServiceCategory_Value11 = "11" // Disability Support: Disability Support
	ServiceCategory_Value12 = "12" // Drug/Alcohol: Drug/Alcohol
	ServiceCategory_Value13 = "13" // Education & Learning: Education & Learning
	ServiceCategory_Value14 = "14" // Emergency Department: Emergency Department
	ServiceCategory_Value15 = "15" // Employment: Employment
	ServiceCategory_Value16 = "16" // Financial & Material Aid: Financial & Material aid
	ServiceCategory_Value17 = "17" // General Practice: General Practice/GP (doctor)
	ServiceCategory_Value35 = "35" // Hospital: Hospital
	ServiceCategory_Value18 = "18" // Housing/Homelessness: Housing/Homelessness
	ServiceCategory_Value19 = "19" // Interpreting: Interpreting
	ServiceCategory_Value20 = "20" // Justice: Justice
	ServiceCategory_Value21 = "21" // Legal: Legal
	ServiceCategory_Value22 = "22" // Mental Health: Mental Health
	ServiceCategory_Value38 = "38" // NDIA: NDIA
	ServiceCategory_Value23 = "23" // Physical Activity & Recreation: Physical Activity & Recreation
	ServiceCategory_Value24 = "24" // Regulation: Regulation
	ServiceCategory_Value25 = "25" // Respite/Carer Support: Respite/Carer Support
	ServiceCategory_Value26 = "26" // Specialist Clinical Pathology: Specialist Clinical Pathology - requires referral
	ServiceCategory_Value27 = "27" // Specialist Medical: Specialist Medical - requires referral
	ServiceCategory_Value28 = "28" // Specialist Obstetrics & Gynecology: Specialist Obstetrics & Gynecology - requires referral
	ServiceCategory_Value29 = "29" // Specialist Paediatric: Specialist Paediatric - requires referral
	ServiceCategory_Value30 = "30" // Specialist Radiology/Imaging: Specialist Radiology/Imaging - requires referral
	ServiceCategory_Value31 = "31" // Specialist Surgical: Specialist Surgical - requires referral
	ServiceCategory_Value32 = "32" // Support Group/s: Support group/s
	ServiceCategory_Value37 = "37" // Test Message (HSD admin): Test Message (HSD admin use only)
	ServiceCategory_Value33 = "33" // Transport: Transport
)

// Clone creates a deep copy of the enum
func (e ServiceCategory) Clone() *ServiceCategory {
	return &ServiceCategory{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ServiceCategory) Equals(other *ServiceCategory) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

