// Code generated by FHIR Generator. DO NOT EDIT.
// Codes for the assessment of whether the entity caused the event.
package fhir_r4b_go
// AdverseEventCausalityAssessment represents the FHIR ValueSet as an enumeration
type AdverseEventCausalityAssessment struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	AdverseEventCausalityAssessment_Certain = "Certain" // Certain: i) Event or laboratory test abnormality, with plausible time relationship to drug intake; ii) Cannot be explained by disease or other drugs; iii) Response to withdrawal plausible (pharmacologically, pathologically); iv) Event definitive pharmacologically or phenomenologically (i.e. an objective and specific medical disorder or a recognized pharmacological phenomenon); or v) Re-challenge satisfactory, if necessary.
	AdverseEventCausalityAssessment_Probably_Likely = "Probably-Likely" // Probably/Likely: i) Event or laboratory test abnormality, with reasonable time relationship to drug intake; ii) Unlikely to be attributed to disease or other drugs; iii) Response to withdrawal clinically reasonable; or iv) Re-challenge not required.
	AdverseEventCausalityAssessment_Possible = "Possible" // Possible: i) Event or laboratory test abnormality, with reasonable time relationship to drug intake; ii) Could also be explained by disease or other drugs; or iii) Information on drug withdrawal may be lacking or unclear.
	AdverseEventCausalityAssessment_Unlikely = "Unlikely" // Unlikely: i) Event or laboratory test abnormality, with a time to drug intake that makes a relationship improbable (but not impossible); or ii) Disease or other drugs provide plausible explanations.
	AdverseEventCausalityAssessment_Conditional_Classified = "Conditional-Classified" // Conditional/Classified: i) Event or laboratory test abnormality; ii) More data for proper assessment needed; or iii) Additional data under examination.
	AdverseEventCausalityAssessment_Unassessable_Unclassifiable = "Unassessable-Unclassifiable" // Unassessable/Unclassifiable: i) Report suggesting an adverse reaction; ii) Cannot be judged because information is insufficient or contradictory; or iii) Data cannot be supplemented or verified.
)

// Clone creates a deep copy of the enum
func (e AdverseEventCausalityAssessment) Clone() *AdverseEventCausalityAssessment {
	return &AdverseEventCausalityAssessment{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *AdverseEventCausalityAssessment) Equals(other *AdverseEventCausalityAssessment) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

