// Code generated by FHIR Generator. DO NOT EDIT.
// Codes for the assessment of whether the entity caused the event.
package fhir_r4b_go

// AdverseEventCausalityAssessment represents the FHIR ValueSet as an enumeration
type AdverseEventCausalityAssessment int

const (
	// Certain: i) Event or laboratory test abnormality, with plausible time relationship to drug intake; ii) Cannot be explained by disease or other drugs; iii) Response to withdrawal plausible (pharmacologically, pathologically); iv) Event definitive pharmacologically or phenomenologically (i.e. an objective and specific medical disorder or a recognized pharmacological phenomenon); or v) Re-challenge satisfactory, if necessary.
	AdverseEventCausalityAssessment_Certain AdverseEventCausalityAssessment = iota
	// Probably/Likely: i) Event or laboratory test abnormality, with reasonable time relationship to drug intake; ii) Unlikely to be attributed to disease or other drugs; iii) Response to withdrawal clinically reasonable; or iv) Re-challenge not required.
	AdverseEventCausalityAssessment_Probably_Likely AdverseEventCausalityAssessment = iota
	// Possible: i) Event or laboratory test abnormality, with reasonable time relationship to drug intake; ii) Could also be explained by disease or other drugs; or iii) Information on drug withdrawal may be lacking or unclear.
	AdverseEventCausalityAssessment_Possible AdverseEventCausalityAssessment = iota
	// Unlikely: i) Event or laboratory test abnormality, with a time to drug intake that makes a relationship improbable (but not impossible); or ii) Disease or other drugs provide plausible explanations.
	AdverseEventCausalityAssessment_Unlikely AdverseEventCausalityAssessment = iota
	// Conditional/Classified: i) Event or laboratory test abnormality; ii) More data for proper assessment needed; or iii) Additional data under examination.
	AdverseEventCausalityAssessment_Conditional_Classified AdverseEventCausalityAssessment = iota
	// Unassessable/Unclassifiable: i) Report suggesting an adverse reaction; ii) Cannot be judged because information is insufficient or contradictory; or iii) Data cannot be supplemented or verified.
	AdverseEventCausalityAssessment_Unassessable_Unclassifiable AdverseEventCausalityAssessment = iota
)

// String converts the enum to its string representation
func (e AdverseEventCausalityAssessment) String() string {
	switch e {
	case AdverseEventCausalityAssessment_Certain: return "Certain"
	case AdverseEventCausalityAssessment_Probably_Likely: return "Probably/Likely"
	case AdverseEventCausalityAssessment_Possible: return "Possible"
	case AdverseEventCausalityAssessment_Unlikely: return "Unlikely"
	case AdverseEventCausalityAssessment_Conditional_Classified: return "Conditional/Classified"
	case AdverseEventCausalityAssessment_Unassessable_Unclassifiable: return "Unassessable/Unclassifiable"
	default: return "Unknown"
	}
}

