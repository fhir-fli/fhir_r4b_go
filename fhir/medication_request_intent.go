// Code generated by FHIR Generator. DO NOT EDIT.
// MedicationRequest Intent Codes
package fhir_r4b_go
// MedicationRequestIntent represents the FHIR ValueSet as an enumeration
type MedicationRequestIntent struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	MedicationRequestIntent_Proposal = "proposal" // Proposal: The request is a suggestion made by someone/something that doesn't have an intention to ensure it occurs and without providing an authorization to act
	MedicationRequestIntent_Plan = "plan" // Plan: The request represents an intention to ensure something occurs without providing an authorization for others to act.
	MedicationRequestIntent_Order = "order" // Order: The request represents a request/demand and authorization for action
	MedicationRequestIntent_Original_order = "original-order" // Original Order: The request represents the original authorization for the medication request.
	MedicationRequestIntent_Reflex_order = "reflex-order" // Reflex Order: The request represents an automatically generated supplemental authorization for action based on a parent authorization together with initial results of the action taken against that parent authorization..
	MedicationRequestIntent_Filler_order = "filler-order" // Filler Order: The request represents the view of an authorization instantiated by a fulfilling system representing the details of the fulfiller's intention to act upon a submitted order.
	MedicationRequestIntent_Instance_order = "instance-order" // Instance Order: The request represents an instance for the particular order, for example a medication administration record.
	MedicationRequestIntent_Option = "option" // Option: The request represents a component or option for a RequestGroup that establishes timing, conditionality and/or other constraints among a set of requests.
)

// Clone creates a deep copy of the enum
func (e MedicationRequestIntent) Clone() *MedicationRequestIntent {
	return &MedicationRequestIntent{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *MedicationRequestIntent) Equals(other *MedicationRequestIntent) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

