// Code generated by FHIR Generator. DO NOT EDIT.
// The status of the diagnostic report.
package fhir_r4b_go

// DiagnosticReportStatus represents the FHIR ValueSet as an enumeration
type DiagnosticReportStatus int

const (
	// Registered: The existence of the report is registered, but there is nothing yet available.
	DiagnosticReportStatus_Registered DiagnosticReportStatus = iota
	// Partial: This is a partial (e.g. initial, interim or preliminary) report: data in the report may be incomplete or unverified.
	DiagnosticReportStatus_Partial DiagnosticReportStatus = iota
	// Preliminary: Verified early results are available, but not all results are final.
	DiagnosticReportStatus_Preliminary DiagnosticReportStatus = iota
	// Final: The report is complete and verified by an authorized person.
	DiagnosticReportStatus_Final DiagnosticReportStatus = iota
	// Amended: Subsequent to being final, the report has been modified. This includes any change in the results, diagnosis, narrative text, or other content of a report that has been issued.
	DiagnosticReportStatus_Amended DiagnosticReportStatus = iota
	// Corrected: Subsequent to being final, the report has been modified to correct an error in the report or referenced results.
	DiagnosticReportStatus_Corrected DiagnosticReportStatus = iota
	// Appended: Subsequent to being final, the report has been modified by adding new content. The existing content is unchanged.
	DiagnosticReportStatus_Appended DiagnosticReportStatus = iota
	// Cancelled: The report is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
	DiagnosticReportStatus_Cancelled DiagnosticReportStatus = iota
	// Entered in Error: The report has been withdrawn following a previous final release. This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
	DiagnosticReportStatus_Entered_in_error DiagnosticReportStatus = iota
	// Unknown: The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
	DiagnosticReportStatus_Unknown DiagnosticReportStatus = iota
)

// String converts the enum to its string representation
func (e DiagnosticReportStatus) String() string {
	switch e {
	case DiagnosticReportStatus_Registered: return "Registered"
	case DiagnosticReportStatus_Partial: return "Partial"
	case DiagnosticReportStatus_Preliminary: return "Preliminary"
	case DiagnosticReportStatus_Final: return "Final"
	case DiagnosticReportStatus_Amended: return "Amended"
	case DiagnosticReportStatus_Corrected: return "Corrected"
	case DiagnosticReportStatus_Appended: return "Appended"
	case DiagnosticReportStatus_Cancelled: return "Cancelled"
	case DiagnosticReportStatus_Entered_in_error: return "Entered in Error"
	case DiagnosticReportStatus_Unknown: return "Unknown"
	default: return "Unknown"
	}
}

