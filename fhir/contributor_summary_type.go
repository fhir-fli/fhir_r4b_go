// Code generated by FHIR Generator. DO NOT EDIT.
// Used to code author list statement, contributorship statement, and such.
package fhir_r4b_go

// ContributorSummaryType represents the FHIR ValueSet as an enumeration
type ContributorSummaryType int

const (
	// Author string: Display of the author list as a complete string.
	ContributorSummaryType_Author_string ContributorSummaryType = iota
	// Contributorship list: Display of the list of contributors as a complete string.
	ContributorSummaryType_Contributorship_list ContributorSummaryType = iota
	// Contributorship statement: Compiled summary of contributions.
	ContributorSummaryType_Contributorship_statement ContributorSummaryType = iota
	// Acknowledgment list: Display of the list of acknowledged parties as a complete string.
	ContributorSummaryType_Acknowledgement_list ContributorSummaryType = iota
	// Acknowledgment statement: Statement of acknowledgment of contributions beyond those compiled for formal contributorship statements.
	ContributorSummaryType_Acknowledgment_statement ContributorSummaryType = iota
	// Funding statement: Statement of financial support for the creation of the cited artifact.
	ContributorSummaryType_Funding_statement ContributorSummaryType = iota
	// Competing interests statement: Statement of completing interests related to the creation of the cited artifact. Also called conflicts of interest or declaration of interests.
	ContributorSummaryType_Competing_interests_statement ContributorSummaryType = iota
)

// String converts the enum to its string representation
func (e ContributorSummaryType) String() string {
	switch e {
	case ContributorSummaryType_Author_string: return "Author string"
	case ContributorSummaryType_Contributorship_list: return "Contributorship list"
	case ContributorSummaryType_Contributorship_statement: return "Contributorship statement"
	case ContributorSummaryType_Acknowledgement_list: return "Acknowledgment list"
	case ContributorSummaryType_Acknowledgment_statement: return "Acknowledgment statement"
	case ContributorSummaryType_Funding_statement: return "Funding statement"
	case ContributorSummaryType_Competing_interests_statement: return "Competing interests statement"
	default: return "Unknown"
	}
}

