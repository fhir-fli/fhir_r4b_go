// Code generated by FHIR Generator. DO NOT EDIT.
// How a capability statement is intended to be used.
package fhir_r4b_go

// CapabilityStatementKind represents the FHIR ValueSet as an enumeration
type CapabilityStatementKind int

const (
	// Instance: The CapabilityStatement instance represents the present capabilities of a specific system instance. This is the kind returned by /metadata for a FHIR server end-point.
	CapabilityStatementKind_Instance CapabilityStatementKind = iota
	// Capability: The CapabilityStatement instance represents the capabilities of a system or piece of software, independent of a particular installation.
	CapabilityStatementKind_Capability CapabilityStatementKind = iota
	// Requirements: The CapabilityStatement instance represents a set of requirements for other systems to meet; e.g. as part of an implementation guide or 'request for proposal'.
	CapabilityStatementKind_Requirements CapabilityStatementKind = iota
)

// String converts the enum to its string representation
func (e CapabilityStatementKind) String() string {
	switch e {
	case CapabilityStatementKind_Instance: return "Instance"
	case CapabilityStatementKind_Capability: return "Capability"
	case CapabilityStatementKind_Requirements: return "Requirements"
	default: return "Unknown"
	}
}

