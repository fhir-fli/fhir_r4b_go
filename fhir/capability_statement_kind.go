// Code generated by FHIR Generator. DO NOT EDIT.
// How a capability statement is intended to be used.
package fhir_r4b_go
// CapabilityStatementKind represents the FHIR ValueSet as an enumeration
type CapabilityStatementKind struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	CapabilityStatementKind_Instance = "instance" // Instance: The CapabilityStatement instance represents the present capabilities of a specific system instance. This is the kind returned by /metadata for a FHIR server end-point.
	CapabilityStatementKind_Capability = "capability" // Capability: The CapabilityStatement instance represents the capabilities of a system or piece of software, independent of a particular installation.
	CapabilityStatementKind_Requirements = "requirements" // Requirements: The CapabilityStatement instance represents a set of requirements for other systems to meet; e.g. as part of an implementation guide or 'request for proposal'.
)

// Clone creates a deep copy of the enum
func (e CapabilityStatementKind) Clone() *CapabilityStatementKind {
	return &CapabilityStatementKind{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *CapabilityStatementKind) Equals(other *CapabilityStatementKind) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

