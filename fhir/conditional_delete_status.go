// Code generated by FHIR Generator. DO NOT EDIT.
// A code that indicates how the server supports conditional delete.
package fhir_r4b_go
// ConditionalDeleteStatus represents the FHIR ValueSet as an enumeration
type ConditionalDeleteStatus struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ConditionalDeleteStatus_Not_supported = "not-supported" // Not Supported: No support for conditional deletes.
	ConditionalDeleteStatus_Single = "single" // Single Deletes Supported: Conditional deletes are supported, but only single resources at a time.
	ConditionalDeleteStatus_Multiple = "multiple" // Multiple Deletes Supported: Conditional deletes are supported, and multiple resources can be deleted in a single interaction.
)

// Clone creates a deep copy of the enum
func (e ConditionalDeleteStatus) Clone() *ConditionalDeleteStatus {
	return &ConditionalDeleteStatus{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ConditionalDeleteStatus) Equals(other *ConditionalDeleteStatus) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

