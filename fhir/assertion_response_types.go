// Code generated by FHIR Generator. DO NOT EDIT.
// The type of response code to use for assertion.
package fhir_r4b_go

// AssertionResponseTypes represents the FHIR ValueSet as an enumeration
type AssertionResponseTypes int

const (
	// okay: Response code is 200.
	AssertionResponseTypes_Okay AssertionResponseTypes = iota
	// created: Response code is 201.
	AssertionResponseTypes_Created AssertionResponseTypes = iota
	// noContent: Response code is 204.
	AssertionResponseTypes_NoContent AssertionResponseTypes = iota
	// notModified: Response code is 304.
	AssertionResponseTypes_NotModified AssertionResponseTypes = iota
	// bad: Response code is 400.
	AssertionResponseTypes_Bad AssertionResponseTypes = iota
	// forbidden: Response code is 403.
	AssertionResponseTypes_Forbidden AssertionResponseTypes = iota
	// notFound: Response code is 404.
	AssertionResponseTypes_NotFound AssertionResponseTypes = iota
	// methodNotAllowed: Response code is 405.
	AssertionResponseTypes_MethodNotAllowed AssertionResponseTypes = iota
	// conflict: Response code is 409.
	AssertionResponseTypes_Conflict AssertionResponseTypes = iota
	// gone: Response code is 410.
	AssertionResponseTypes_Gone AssertionResponseTypes = iota
	// preconditionFailed: Response code is 412.
	AssertionResponseTypes_PreconditionFailed AssertionResponseTypes = iota
	// unprocessable: Response code is 422.
	AssertionResponseTypes_Unprocessable AssertionResponseTypes = iota
)

// String converts the enum to its string representation
func (e AssertionResponseTypes) String() string {
	switch e {
	case AssertionResponseTypes_Okay: return "okay"
	case AssertionResponseTypes_Created: return "created"
	case AssertionResponseTypes_NoContent: return "noContent"
	case AssertionResponseTypes_NotModified: return "notModified"
	case AssertionResponseTypes_Bad: return "bad"
	case AssertionResponseTypes_Forbidden: return "forbidden"
	case AssertionResponseTypes_NotFound: return "notFound"
	case AssertionResponseTypes_MethodNotAllowed: return "methodNotAllowed"
	case AssertionResponseTypes_Conflict: return "conflict"
	case AssertionResponseTypes_Gone: return "gone"
	case AssertionResponseTypes_PreconditionFailed: return "preconditionFailed"
	case AssertionResponseTypes_Unprocessable: return "unprocessable"
	default: return "Unknown"
	}
}

