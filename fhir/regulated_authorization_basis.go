// Code generated by FHIR Generator. DO NOT EDIT.
// A legal or regulatory framework against which an authorization is granted, or other reasons for it.
package fhir_r4b_go

// RegulatedAuthorizationBasis represents the FHIR ValueSet as an enumeration
type RegulatedAuthorizationBasis int

const (
	// Full application: 
	RegulatedAuthorizationBasis_Full RegulatedAuthorizationBasis = iota
	// New active substance: 
	RegulatedAuthorizationBasis_NewSubstance RegulatedAuthorizationBasis = iota
	// Known active substance: 
	RegulatedAuthorizationBasis_KnownSubstance RegulatedAuthorizationBasis = iota
	// Similar biological application: 
	RegulatedAuthorizationBasis_SimilarBiological RegulatedAuthorizationBasis = iota
	// Well-established use application: 
	RegulatedAuthorizationBasis_Well_establishedUse RegulatedAuthorizationBasis = iota
	// Traditional use registration for herbal medicinal product application: 
	RegulatedAuthorizationBasis_TraditionalUse RegulatedAuthorizationBasis = iota
	// Bibliographical application (stand-alone): 
	RegulatedAuthorizationBasis_Bibliographical RegulatedAuthorizationBasis = iota
	// Known human blood/plasma derived ancillary medicinal substance: 
	RegulatedAuthorizationBasis_KnownHumanBlood RegulatedAuthorizationBasis = iota
	// Authorisations for temporary use: 
	RegulatedAuthorizationBasis_TemporaryUse RegulatedAuthorizationBasis = iota
	// Parallel traded products: 
	RegulatedAuthorizationBasis_ParallelTrade RegulatedAuthorizationBasis = iota
)

// String converts the enum to its string representation
func (e RegulatedAuthorizationBasis) String() string {
	switch e {
	case RegulatedAuthorizationBasis_Full: return "Full application"
	case RegulatedAuthorizationBasis_NewSubstance: return "New active substance"
	case RegulatedAuthorizationBasis_KnownSubstance: return "Known active substance"
	case RegulatedAuthorizationBasis_SimilarBiological: return "Similar biological application"
	case RegulatedAuthorizationBasis_Well_establishedUse: return "Well-established use application"
	case RegulatedAuthorizationBasis_TraditionalUse: return "Traditional use registration for herbal medicinal product application"
	case RegulatedAuthorizationBasis_Bibliographical: return "Bibliographical application (stand-alone)"
	case RegulatedAuthorizationBasis_KnownHumanBlood: return "Known human blood/plasma derived ancillary medicinal substance"
	case RegulatedAuthorizationBasis_TemporaryUse: return "Authorisations for temporary use"
	case RegulatedAuthorizationBasis_ParallelTrade: return "Parallel traded products"
	default: return "Unknown"
	}
}

