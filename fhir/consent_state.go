// Code generated by FHIR Generator. DO NOT EDIT.
// Indicates the state of the consent.
package fhir_r4b_go
// ConsentState represents the FHIR ValueSet as an enumeration
type ConsentState struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ConsentState_Draft = "draft" // Pending: The consent is in development or awaiting use but is not yet intended to be acted upon.
	ConsentState_Proposed = "proposed" // Proposed: The consent has been proposed but not yet agreed to by all parties. The negotiation stage.
	ConsentState_Active = "active" // Active: The consent is to be followed and enforced.
	ConsentState_Rejected = "rejected" // Rejected: The consent has been rejected by one or more of the parties.
	ConsentState_Inactive = "inactive" // Inactive: The consent is terminated or replaced.
	ConsentState_Entered_in_error = "entered-in-error" // Entered in Error: The consent was created wrongly (e.g. wrong patient) and should be ignored.
)

// Clone creates a deep copy of the enum
func (e ConsentState) Clone() *ConsentState {
	return &ConsentState{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ConsentState) Equals(other *ConsentState) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

