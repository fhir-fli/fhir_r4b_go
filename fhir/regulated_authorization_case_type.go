// Code generated by FHIR Generator. DO NOT EDIT.
// The type of a case involved in an application.
package fhir_r4b_go
// RegulatedAuthorizationCaseType represents the FHIR ValueSet as an enumeration
type RegulatedAuthorizationCaseType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	RegulatedAuthorizationCaseType_InitialMAA = "InitialMAA" // Initial Marketing Authorisation Application: 
	RegulatedAuthorizationCaseType_Variation = "Variation" // Variation: 
	RegulatedAuthorizationCaseType_LineExtension = "LineExtension" // Line Extension: 
	RegulatedAuthorizationCaseType_PSUR = "PSUR" // Periodic Safety Update Report: 
	RegulatedAuthorizationCaseType_Renewal = "Renewal" // Renewal: 
	RegulatedAuthorizationCaseType_Follow_up = "Follow-up" // Follow-up Measure: 
	RegulatedAuthorizationCaseType_Value100000155699 = "100000155699" // Specific Obligation: 
	RegulatedAuthorizationCaseType_AnnualReassessment = "AnnualReassessment" // Annual Reassessment: 
	RegulatedAuthorizationCaseType_UrgentSafetyRestriction = "UrgentSafetyRestriction" // Urgent Safety Restriction: 
	RegulatedAuthorizationCaseType_PaediatricSubmission = "PaediatricSubmission" // Paediatric Submission: 
	RegulatedAuthorizationCaseType_TransferMA = "TransferMA" // Transfer of a marketing authorisation: 
	RegulatedAuthorizationCaseType_LiftingSuspension = "LiftingSuspension" // Lifting of a Suspension: 
	RegulatedAuthorizationCaseType_Withdrawal = "Withdrawal" // Withdrawal: 
	RegulatedAuthorizationCaseType_Reformatting = "Reformatting" // Reformatting: 
	RegulatedAuthorizationCaseType_RMP = "RMP" // Risk Management Plan: 
	RegulatedAuthorizationCaseType_ReviewSuspension = "ReviewSuspension" // Review of a Suspension of MA: 
	RegulatedAuthorizationCaseType_SupplementalInformation = "SupplementalInformation" // Supplemental Information: 
	RegulatedAuthorizationCaseType_RepeatUse = "RepeatUse" // Repeat Use Procedure: 
	RegulatedAuthorizationCaseType_SignalDetection = "SignalDetection" // Signal detection: 
	RegulatedAuthorizationCaseType_FLU = "FLU" // FLU STRAIN UPDATE: 
	RegulatedAuthorizationCaseType_PANDEMIC = "PANDEMIC" // PANDEMIC UPDATE: 
	RegulatedAuthorizationCaseType_Orphan = "Orphan" // Orphan Designation Application: 
)

// Clone creates a deep copy of the enum
func (e RegulatedAuthorizationCaseType) Clone() *RegulatedAuthorizationCaseType {
	return &RegulatedAuthorizationCaseType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *RegulatedAuthorizationCaseType) Equals(other *RegulatedAuthorizationCaseType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

