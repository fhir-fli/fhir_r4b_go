// Code generated by FHIR Generator. DO NOT EDIT.
// Possible group measure aggregates (E.g. Mean, Median).
package fhir_r4b_go
// GroupMeasure represents the FHIR ValueSet as an enumeration
type GroupMeasure struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	GroupMeasure_Mean = "mean" // Mean: Aggregated using Mean of participant values.
	GroupMeasure_Median = "median" // Median: Aggregated using Median of participant values.
	GroupMeasure_Mean_of_mean = "mean-of-mean" // Mean of Study Means: Aggregated using Mean of study mean values.
	GroupMeasure_Mean_of_median = "mean-of-median" // Mean of Study Medins: Aggregated using Mean of study median values.
	GroupMeasure_Median_of_mean = "median-of-mean" // Median of Study Means: Aggregated using Median of study mean values.
	GroupMeasure_Median_of_median = "median-of-median" // Median of Study Medians: Aggregated using Median of study median values.
)

// Clone creates a deep copy of the enum
func (e GroupMeasure) Clone() *GroupMeasure {
	return &GroupMeasure{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *GroupMeasure) Equals(other *GroupMeasure) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

