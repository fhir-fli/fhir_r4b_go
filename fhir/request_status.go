// Code generated by FHIR Generator. DO NOT EDIT.
// Codes identifying the lifecycle stage of a request.
package fhir_r4b_go
// RequestStatus represents the FHIR ValueSet as an enumeration
type RequestStatus struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	RequestStatus_Draft = "draft" // Draft: The request has been created but is not yet complete or ready for action.
	RequestStatus_Active = "active" // Active: The request is in force and ready to be acted upon.
	RequestStatus_On_hold = "on-hold" // On Hold: The request (and any implicit authorization to act) has been temporarily withdrawn but is expected to resume in the future.
	RequestStatus_Revoked = "revoked" // Revoked: The request (and any implicit authorization to act) has been terminated prior to the known full completion of the intended actions. No further activity should occur.
	RequestStatus_Completed = "completed" // Completed: The activity described by the request has been fully performed. No further activity will occur.
	RequestStatus_Entered_in_error = "entered-in-error" // Entered in Error: This request should never have existed and should be considered 'void'. (It is possible that real-world decisions were based on it. If real-world activity has occurred, the status should be "revoked" rather than "entered-in-error".).
	RequestStatus_Unknown = "unknown" // Unknown: The authoring/source system does not know which of the status values currently applies for this request. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
)

// Clone creates a deep copy of the enum
func (e RequestStatus) Clone() *RequestStatus {
	return &RequestStatus{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *RequestStatus) Equals(other *RequestStatus) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

