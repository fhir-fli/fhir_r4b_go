// Code generated by FHIR Generator. DO NOT EDIT.
// Describes the type of a metric calibration.
package fhir_r4b_go

// DeviceMetricCalibrationType represents the FHIR ValueSet as an enumeration
type DeviceMetricCalibrationType int

const (
	// Unspecified: Metric calibration method has not been identified.
	DeviceMetricCalibrationType_Unspecified DeviceMetricCalibrationType = iota
	// Offset: Offset metric calibration method.
	DeviceMetricCalibrationType_Offset DeviceMetricCalibrationType = iota
	// Gain: Gain metric calibration method.
	DeviceMetricCalibrationType_Gain DeviceMetricCalibrationType = iota
	// Two Point: Two-point metric calibration method.
	DeviceMetricCalibrationType_Two_point DeviceMetricCalibrationType = iota
)

// String converts the enum to its string representation
func (e DeviceMetricCalibrationType) String() string {
	switch e {
	case DeviceMetricCalibrationType_Unspecified: return "Unspecified"
	case DeviceMetricCalibrationType_Offset: return "Offset"
	case DeviceMetricCalibrationType_Gain: return "Gain"
	case DeviceMetricCalibrationType_Two_point: return "Two Point"
	default: return "Unknown"
	}
}

