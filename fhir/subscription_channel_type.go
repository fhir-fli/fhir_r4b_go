// Code generated by FHIR Generator. DO NOT EDIT.
// The type of method used to execute a subscription.
package fhir_r4b_go
// SubscriptionChannelType represents the FHIR ValueSet as an enumeration
type SubscriptionChannelType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	SubscriptionChannelType_Rest_hook = "rest-hook" // Rest Hook: The channel is executed by making a post to the URI. If a payload is included, the URL is interpreted as the service base, and an update (PUT) is made.
	SubscriptionChannelType_Websocket = "websocket" // Websocket: The channel is executed by sending a packet across a web socket connection maintained by the client. The URL identifies the websocket, and the client binds to this URL.
	SubscriptionChannelType_Email = "email" // Email: The channel is executed by sending an email to the email addressed in the URI (which must be a mailto:).
	SubscriptionChannelType_Sms = "sms" // SMS: The channel is executed by sending an SMS message to the phone number identified in the URL (tel:).
	SubscriptionChannelType_Message = "message" // Message: The channel is executed by sending a message (e.g. a Bundle with a MessageHeader resource etc.) to the application identified in the URI.
)

// Clone creates a deep copy of the enum
func (e SubscriptionChannelType) Clone() *SubscriptionChannelType {
	return &SubscriptionChannelType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *SubscriptionChannelType) Equals(other *SubscriptionChannelType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

