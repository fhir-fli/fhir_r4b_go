// Code generated by FHIR Generator. DO NOT EDIT.
// The type of method used to execute a subscription.
package fhir_r4b_go

// SubscriptionChannelType represents the FHIR ValueSet as an enumeration
type SubscriptionChannelType int

const (
	// Rest Hook: The channel is executed by making a post to the URI. If a payload is included, the URL is interpreted as the service base, and an update (PUT) is made.
	SubscriptionChannelType_Rest_hook SubscriptionChannelType = iota
	// Websocket: The channel is executed by sending a packet across a web socket connection maintained by the client. The URL identifies the websocket, and the client binds to this URL.
	SubscriptionChannelType_Websocket SubscriptionChannelType = iota
	// Email: The channel is executed by sending an email to the email addressed in the URI (which must be a mailto:).
	SubscriptionChannelType_Email SubscriptionChannelType = iota
	// SMS: The channel is executed by sending an SMS message to the phone number identified in the URL (tel:).
	SubscriptionChannelType_Sms SubscriptionChannelType = iota
	// Message: The channel is executed by sending a message (e.g. a Bundle with a MessageHeader resource etc.) to the application identified in the URI.
	SubscriptionChannelType_Message SubscriptionChannelType = iota
)

// String converts the enum to its string representation
func (e SubscriptionChannelType) String() string {
	switch e {
	case SubscriptionChannelType_Rest_hook: return "Rest Hook"
	case SubscriptionChannelType_Websocket: return "Websocket"
	case SubscriptionChannelType_Email: return "Email"
	case SubscriptionChannelType_Sms: return "SMS"
	case SubscriptionChannelType_Message: return "Message"
	default: return "Unknown"
	}
}

