// Code generated by FHIR Generator. DO NOT EDIT.
// Describes the progression, or lack thereof, towards the goal against the target.
package fhir_r4b_go
// GoalAchievementStatus represents the FHIR ValueSet as an enumeration
type GoalAchievementStatus struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	GoalAchievementStatus_In_progress = "in-progress" // In Progress: The goal is being sought but has not yet been reached. (Also applies if the goal was reached in the past but there has been regression and the goal is again being sought).
	GoalAchievementStatus_Improving = "improving" // Improving: The goal is being sought, and is progressing.
	GoalAchievementStatus_Worsening = "worsening" // Worsening: The goal is being sought, but is regressing.
	GoalAchievementStatus_No_change = "no-change" // No Change: The goal is being sought, but the trend is flat.
	GoalAchievementStatus_Achieved = "achieved" // Achieved: The goal has been met.
	GoalAchievementStatus_Sustaining = "sustaining" // Sustaining: The goal has been met, but ongoing activity is needed to sustain the goal objective.
	GoalAchievementStatus_Not_achieved = "not-achieved" // Not Achieved: The goal has not been met and there might or might not have been progress towards target.
	GoalAchievementStatus_No_progress = "no-progress" // No Progress: The goal has not been met and little to no progress towards target.
	GoalAchievementStatus_Not_attainable = "not-attainable" // Not Attainable: The goal is not possible to be met.
)

// Clone creates a deep copy of the enum
func (e GoalAchievementStatus) Clone() *GoalAchievementStatus {
	return &GoalAchievementStatus{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *GoalAchievementStatus) Equals(other *GoalAchievementStatus) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

