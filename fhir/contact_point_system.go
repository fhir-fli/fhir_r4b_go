// Code generated by FHIR Generator. DO NOT EDIT.
// Telecommunications form for contact point.
package fhir_r4b_go
// ContactPointSystem represents the FHIR ValueSet as an enumeration
type ContactPointSystem struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ContactPointSystem_Phone = "phone" // Phone: The value is a telephone number used for voice calls. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
	ContactPointSystem_Fax = "fax" // Fax: The value is a fax machine. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
	ContactPointSystem_Email = "email" // Email: The value is an email address.
	ContactPointSystem_Pager = "pager" // Pager: The value is a pager number. These may be local pager numbers that are only usable on a particular pager system.
	ContactPointSystem_Url = "url" // URL: A contact that is not a phone, fax, pager or email address and is expressed as a URL. This is intended for various institutional or personal contacts including web sites, blogs, Skype, Twitter, Facebook, etc. Do not use for email addresses.
	ContactPointSystem_Sms = "sms" // SMS: A contact that can be used for sending an sms message (e.g. mobile phones, some landlines).
	ContactPointSystem_Other = "other" // Other: A contact that is not a phone, fax, page or email address and is not expressible as a URL. E.g. Internal mail address. This SHOULD NOT be used for contacts that are expressible as a URL (e.g. Skype, Twitter, Facebook, etc.) Extensions may be used to distinguish "other" contact types.
)

// Clone creates a deep copy of the enum
func (e ContactPointSystem) Clone() *ContactPointSystem {
	return &ContactPointSystem{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ContactPointSystem) Equals(other *ContactPointSystem) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

