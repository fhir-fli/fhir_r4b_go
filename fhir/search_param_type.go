// Code generated by FHIR Generator. DO NOT EDIT.
// Data types allowed to be used for search parameters.
package fhir_r4b_go

// SearchParamType represents the FHIR ValueSet as an enumeration
type SearchParamType int

const (
	// Number: Search parameter SHALL be a number (a whole number, or a decimal).
	SearchParamType_Number SearchParamType = iota
	// Date/DateTime: Search parameter is on a date/time. The date format is the standard XML format, though other formats may be supported.
	SearchParamType_Date SearchParamType = iota
	// String: Search parameter is a simple string, like a name part. Search is case-insensitive and accent-insensitive. May match just the start of a string. String parameters may contain spaces.
	SearchParamType_String SearchParamType = iota
	// Token: Search parameter on a coded element or identifier. May be used to search through the text, display, code and code/codesystem (for codes) and label, system and key (for identifier). Its value is either a string or a pair of namespace and value, separated by a "|", depending on the modifier used.
	SearchParamType_Token SearchParamType = iota
	// Reference: A reference to another resource (Reference or canonical).
	SearchParamType_Reference SearchParamType = iota
	// Composite: A composite search parameter that combines a search on two values together.
	SearchParamType_Composite SearchParamType = iota
	// Quantity: A search parameter that searches on a quantity.
	SearchParamType_Quantity SearchParamType = iota
	// URI: A search parameter that searches on a URI (RFC 3986).
	SearchParamType_Uri SearchParamType = iota
	// Special: Special logic applies to this parameter per the description of the search parameter.
	SearchParamType_Special SearchParamType = iota
)

// String converts the enum to its string representation
func (e SearchParamType) String() string {
	switch e {
	case SearchParamType_Number: return "Number"
	case SearchParamType_Date: return "Date/DateTime"
	case SearchParamType_String: return "String"
	case SearchParamType_Token: return "Token"
	case SearchParamType_Reference: return "Reference"
	case SearchParamType_Composite: return "Composite"
	case SearchParamType_Quantity: return "Quantity"
	case SearchParamType_Uri: return "URI"
	case SearchParamType_Special: return "Special"
	default: return "Unknown"
	}
}

