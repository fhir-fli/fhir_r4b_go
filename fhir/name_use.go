// Code generated by FHIR Generator. DO NOT EDIT.
// The use of a human name.
package fhir_r4b_go
// NameUse represents the FHIR ValueSet as an enumeration
type NameUse struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	NameUse_Usual = "usual" // Usual: Known as/conventional/the one you normally use.
	NameUse_Official = "official" // Official: The formal name as registered in an official (government) registry, but which name might not be commonly used. May be called "legal name".
	NameUse_Temp = "temp" // Temp: A temporary name. Name.period can provide more detailed information. This may also be used for temporary names assigned at birth or in emergency situations.
	NameUse_Nickname = "nickname" // Nickname: A name that is used to address the person in an informal manner, but is not part of their formal or usual name.
	NameUse_Anonymous = "anonymous" // Anonymous: Anonymous assigned name, alias, or pseudonym (used to protect a person's identity for privacy reasons).
	NameUse_Old = "old" // Old: This name is no longer in use (or was never correct, but retained for records).
	NameUse_Maiden = "maiden" // Name changed for Marriage: A name used prior to changing name because of marriage. This name use is for use by applications that collect and store names that were used prior to a marriage. Marriage naming customs vary greatly around the world, and are constantly changing. This term is not gender specific. The use of this term does not imply any particular history for a person's name.
)

// Clone creates a deep copy of the enum
func (e NameUse) Clone() *NameUse {
	return &NameUse{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *NameUse) Equals(other *NameUse) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

