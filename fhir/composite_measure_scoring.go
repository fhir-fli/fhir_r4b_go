// Code generated by FHIR Generator. DO NOT EDIT.
// The composite scoring method of the measure.
package fhir_r4b_go

// CompositeMeasureScoring represents the FHIR ValueSet as an enumeration
type CompositeMeasureScoring int

const (
	// Opportunity: Opportunity scoring combines the scores from component measures by combining the numerators and denominators for each component.
	CompositeMeasureScoring_Opportunity CompositeMeasureScoring = iota
	// All-or-nothing: All-or-nothing scoring includes an individual in the numerator of the composite measure if they are in the numerators of all of the component measures in which they are in the denominator.
	CompositeMeasureScoring_All_or_nothing CompositeMeasureScoring = iota
	// Linear: Linear scoring gives an individual a score based on the number of numerators in which they appear.
	CompositeMeasureScoring_Linear CompositeMeasureScoring = iota
	// Weighted: Weighted scoring gives an individual a score based on a weighted factor for each component numerator in which they appear.
	CompositeMeasureScoring_Weighted CompositeMeasureScoring = iota
)

// String converts the enum to its string representation
func (e CompositeMeasureScoring) String() string {
	switch e {
	case CompositeMeasureScoring_Opportunity: return "Opportunity"
	case CompositeMeasureScoring_All_or_nothing: return "All-or-nothing"
	case CompositeMeasureScoring_Linear: return "Linear"
	case CompositeMeasureScoring_Weighted: return "Weighted"
	default: return "Unknown"
	}
}

