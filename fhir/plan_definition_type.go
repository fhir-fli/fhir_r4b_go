// Code generated by FHIR Generator. DO NOT EDIT.
// The type of PlanDefinition.
package fhir_r4b_go
// PlanDefinitionType represents the FHIR ValueSet as an enumeration
type PlanDefinitionType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	PlanDefinitionType_Order_set = "order-set" // Order Set: A pre-defined and approved group of orders related to a particular clinical condition (e.g. hypertension treatment and monitoring) or stage of care (e.g. hospital admission to Coronary Care Unit). An order set is used as a checklist for the clinician when managing a patient with a specific condition. It is a structured collection of orders relevant to that condition and presented to the clinician in a computerized provider order entry (CPOE) system.
	PlanDefinitionType_Clinical_protocol = "clinical-protocol" // Clinical Protocol: Defines a desired/typical sequence of clinical activities including preconditions, triggers and temporal relationships.
	PlanDefinitionType_Eca_rule = "eca-rule" // ECA Rule: A decision support rule of the form [on Event] if Condition then Action. It is intended to be a shareable, computable definition of actions that should be taken whenever some condition is met in response to a particular event or events.
	PlanDefinitionType_Workflow_definition = "workflow-definition" // Workflow Definition: Defines the steps for a group of one or more systems in an event flow process along with the step constraints, sequence, pre-conditions and decision points to complete a particular objective.
)

// Clone creates a deep copy of the enum
func (e PlanDefinitionType) Clone() *PlanDefinitionType {
	return &PlanDefinitionType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *PlanDefinitionType) Equals(other *PlanDefinitionType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

