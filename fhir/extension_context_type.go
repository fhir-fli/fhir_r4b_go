// Code generated by FHIR Generator. DO NOT EDIT.
// How an extension context is interpreted.
package fhir_r4b_go
// ExtensionContextType represents the FHIR ValueSet as an enumeration
type ExtensionContextType struct {
	Value   *string  `json:"value,omitempty"`
	Element *Element `json:"_value,omitempty"`
}

// Enum constants
const (
	ExtensionContextType_Fhirpath = "fhirpath" // FHIRPath: The context is all elements that match the FHIRPath query found in the expression.
	ExtensionContextType_Element = "element" // Element ID: The context is any element that has an ElementDefinition.id that matches that found in the expression. This includes ElementDefinition Ids that have slicing identifiers. The full path for the element is [url]#[elementid]. If there is no #, the Element id is one defined in the base specification.
	ExtensionContextType_Extension = "extension" // Extension URL: The context is a particular extension from a particular StructureDefinition, and the expression is just a uri that identifies the extension.
)

// Clone creates a deep copy of the enum
func (e ExtensionContextType) Clone() *ExtensionContextType {
	return &ExtensionContextType{Value: e.Value, Element: e.Element.Clone()}
}

// Equals checks equality between two enums
func (e *ExtensionContextType) Equals(other *ExtensionContextType) bool {
	return e.Value == other.Value && e.Element.Equals(other.Element)
}

