// Code generated by FHIR Generator. DO NOT EDIT.

package fhir_r4b_go

import (
	"encoding/json")

// ContactDetail
// Specifies contact information for a person or organization.
type ContactDetail struct {
	DataType
	Id *FhirString `json:"id,omitempty"`
	Extension_ []*FhirExtension `json:"extension,omitempty"`
	Name *FhirString `json:"name,omitempty"`
	Telecom []*ContactPoint `json:"telecom,omitempty"`
}

// NewContactDetail creates a new ContactDetail instance
func NewContactDetail() *ContactDetail {
	return &ContactDetail{}
}

// FromJSON populates ContactDetail from JSON data
func (m *ContactDetail) FromJSON(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToJSON converts ContactDetail to JSON data
func (m *ContactDetail) ToJSON() ([]byte, error) {
	return json.Marshal(m)
}

// Clone creates a deep copy of ContactDetail
func (m *ContactDetail) Clone() *ContactDetail {
	if m == nil { return nil }
	return &ContactDetail{
		Id: m.Id.Clone(),
		Extension_: cloneSlices(m.Extension_),
		Name: m.Name.Clone(),
		Telecom: cloneSlices(m.Telecom),
	}
}

// Equals checks for equality with another ContactDetail instance
func (m *ContactDetail) Equals(other *ContactDetail) bool {
	if m == nil && other == nil { return true }
	if m == nil || other == nil { return false }
	if !m.Id.Equals(other.Id) { return false }
	if !compareSlices(m.Extension_, other.Extension_) { return false }
	if !m.Name.Equals(other.Name) { return false }
	if !compareSlices(m.Telecom, other.Telecom) { return false }
	return true
}

