// Code generated by FHIR Generator. DO NOT EDIT.

package fhir_r4b_go

import (
	"encoding/json")

// Narrative
// A human-readable summary of the resource conveying the essential clinical and business information for the resource.
type Narrative struct {
	DataType
	Id *FhirString `json:"id,omitempty"`
	Extension_ []*FhirExtension `json:"extension,omitempty"`
	Status *NarrativeStatus `json:"status,omitempty"`
	Div *FhirXhtml `json:"div,omitempty"`
}

// NewNarrative creates a new Narrative instance
func NewNarrative() *Narrative {
	return &Narrative{}
}

// FromJSON populates Narrative from JSON data
func (m *Narrative) FromJSON(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToJSON converts Narrative to JSON data
func (m *Narrative) ToJSON() ([]byte, error) {
	return json.Marshal(m)
}

// Clone creates a deep copy of Narrative
func (m *Narrative) Clone() *Narrative {
	if m == nil { return nil }
	return &Narrative{
		Id: m.Id.Clone(),
		Extension_: cloneSlices(m.Extension_),
		Status: m.Status.Clone(),
		Div: m.Div.Clone(),
	}
}

// Equals checks for equality with another Narrative instance
func (m *Narrative) Equals(other *Narrative) bool {
	if m == nil && other == nil { return true }
	if m == nil || other == nil { return false }
	if !m.Id.Equals(other.Id) { return false }
	if !compareSlices(m.Extension_, other.Extension_) { return false }
	if !m.Status.Equals(other.Status) { return false }
	if !m.Div.Equals(other.Div) { return false }
	return true
}

