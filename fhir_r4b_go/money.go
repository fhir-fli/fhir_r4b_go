// Code generated by FHIR Generator. DO NOT EDIT.

package fhir_r4b_go

import (
	"encoding/json")

// Money
// An amount of economic utility in some recognized currency.
type Money struct {
	DataType
	Id *FhirString `json:"id,omitempty"`
	Extension_ []*FhirExtension `json:"extension,omitempty"`
	Value *FhirDecimal `json:"value,omitempty"`
	Currency *FhirCode `json:"currency,omitempty"`
}

// NewMoney creates a new Money instance
func NewMoney() *Money {
	return &Money{}
}

// FromJSON populates Money from JSON data
func (m *Money) FromJSON(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToJSON converts Money to JSON data
func (m *Money) ToJSON() ([]byte, error) {
	return json.Marshal(m)
}

// Clone creates a deep copy of Money
func (m *Money) Clone() *Money {
	if m == nil { return nil }
	return &Money{
		Id: m.Id.Clone(),
		Extension_: cloneSlices(m.Extension_),
		Value: m.Value.Clone(),
		Currency: m.Currency.Clone(),
	}
}

// Equals checks for equality with another Money instance
func (m *Money) Equals(other *Money) bool {
	if m == nil && other == nil { return true }
	if m == nil || other == nil { return false }
	if !m.Id.Equals(other.Id) { return false }
	if !compareSlices(m.Extension_, other.Extension_) { return false }
	if !m.Value.Equals(other.Value) { return false }
	if !m.Currency.Equals(other.Currency) { return false }
	return true
}

